/***************************************************************
* file: QuarterProject245.java
* author: Daniel Fierros
* author: Troy Dome
* 
* class: CS 245 â€“ GUI
*
* assignment: program 1 version 2
* date last modified: 08/17/2016
*
* purpose: This program is a hangman game that begins with a splash screen for 3 seconds
* then enters the menu panel. Once at the menu panel the user has 3 options: (1)Play (2)High Score (3)Credits.
* Once the play button is pressed the Hangman game begins with setting up the start display, then the user presses the 
* desired letter.If the user guesses wrong 6 times, then the program ends, as well as when the user correctly guesses the word.
* Then the program goes to the next game that shows the user some buttons and they must match the color to get plus 100 points
* otherwise no points given. This process is done for 5 rounds then it goes to the end screen. The lowest high score is checked 
* and if the current score is greater than that score, then the program updates the score to the board with the possibility to enter
* name.The High score button displays all the possible high scores that have been played, it gets the data from a file.
* The credits button displays the authors.
****************************************************************/ 
package teamsnow;


import java.awt.Color;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.Timer;


public class QuarterProject245 extends javax.swing.JFrame {

    /**
     * method:QuarterProject245
     * Purpose:Constructor that Creates new form and sets the arrays with the proper words
     */
    public QuarterProject245()
    {
        initComponents();
        this.words = new String[]{"abstract", "cemetery", "nurse", "pharmacy", "climbing"};
        this.colors = new String[]{"red","blue","yellow","purple","green"};
    }
    /**
     * method:initComponents
     * purpose:The methods that are in the generated code is the portion for the design area .
     */
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      popupUser = new javax.swing.JDialog();
      popupUserInput = new javax.swing.JTextField();
      popupDirections = new javax.swing.JLabel();
      popupError = new javax.swing.JLabel();
      popupOkButton = new javax.swing.JButton();
      popupCancelButton = new javax.swing.JButton();
      mainPanel = new javax.swing.JPanel();
      SplashPage = new javax.swing.JPanel();
      ProjectTitle = new javax.swing.JLabel();
      TeamName = new javax.swing.JLabel();
      MainMenu = new javax.swing.JPanel();
      PlayButton = new javax.swing.JButton();
      HighScoresButton = new javax.swing.JButton();
      CreditsButton = new javax.swing.JButton();
      TeamLogo = new javax.swing.JLabel();
      CreditsMenu = new javax.swing.JPanel();
      backButton0 = new javax.swing.JButton();
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      jLabel3 = new javax.swing.JLabel();
      HighScoresMenu = new javax.swing.JPanel();
      backButton1 = new javax.swing.JButton();
      jLabel4 = new javax.swing.JLabel();
      highscore1 = new javax.swing.JLabel();
      highscore2 = new javax.swing.JLabel();
      highscore3 = new javax.swing.JLabel();
      highscore4 = new javax.swing.JLabel();
      PlayMenu = new javax.swing.JPanel();
      jLabel9 = new javax.swing.JLabel();
      skipButton = new javax.swing.JButton();
      aButton = new javax.swing.JButton();
      bButton = new javax.swing.JButton();
      cButton = new javax.swing.JButton();
      dButton = new javax.swing.JButton();
      eButton = new javax.swing.JButton();
      fButton = new javax.swing.JButton();
      gButton = new javax.swing.JButton();
      hButton = new javax.swing.JButton();
      iButton = new javax.swing.JButton();
      jButton = new javax.swing.JButton();
      kButton = new javax.swing.JButton();
      LButton = new javax.swing.JButton();
      mButton = new javax.swing.JButton();
      sButton = new javax.swing.JButton();
      tButton = new javax.swing.JButton();
      uButton = new javax.swing.JButton();
      vButton = new javax.swing.JButton();
      oButton = new javax.swing.JButton();
      wButton = new javax.swing.JButton();
      pButton = new javax.swing.JButton();
      xButton = new javax.swing.JButton();
      yButton = new javax.swing.JButton();
      zButton = new javax.swing.JButton();
      qButton = new javax.swing.JButton();
      nButton = new javax.swing.JButton();
      rButton = new javax.swing.JButton();
      jLabel11 = new javax.swing.JLabel();
      jLabelHangman = new javax.swing.JLabel();
      jLabel15 = new javax.swing.JLabel();
      jLabelSpcae = new javax.swing.JLabel();
      jLabelLetter1 = new javax.swing.JLabel();
      jLabelLetter3 = new javax.swing.JLabel();
      jLabelLetter2 = new javax.swing.JLabel();
      jLabelLetter4 = new javax.swing.JLabel();
      jLabelLetter5 = new javax.swing.JLabel();
      jLabelLetter6 = new javax.swing.JLabel();
      jLabelLetter7 = new javax.swing.JLabel();
      jLabelLetter8 = new javax.swing.JLabel();
      PointAndClickGame = new javax.swing.JPanel();
      jLabelPACClock = new javax.swing.JLabel();
      jButtonBlue = new javax.swing.JButton();
      jButtonPurple = new javax.swing.JButton();
      jButtonRed = new javax.swing.JButton();
      jButtonYellow = new javax.swing.JButton();
      jLabelScorePAC = new javax.swing.JLabel();
      jButtonGreen = new javax.swing.JButton();
      jLabelColor = new javax.swing.JLabel();
      End = new javax.swing.JPanel();
      jLabel10 = new javax.swing.JLabel();
      bTMButton = new javax.swing.JButton();
      jLabel13 = new javax.swing.JLabel();
      HighScoreSet = new javax.swing.JPanel();
      jLabel12 = new javax.swing.JLabel();
      jLabel14 = new javax.swing.JLabel();
      userName = new javax.swing.JTextField();
      doneButton = new javax.swing.JButton();
      jLabel5 = new javax.swing.JLabel();
      SudokuGame = new javax.swing.JPanel();
      SudokuTitle = new javax.swing.JLabel();
      sudokuClock = new javax.swing.JLabel();
      sudokuSubmit = new javax.swing.JButton();
      sudokuQuit = new javax.swing.JButton();
      gridfield0 = new javax.swing.JLabel();
      gridfield3 = new javax.swing.JLabel();
      gridfield5 = new javax.swing.JLabel();
      gridfield8 = new javax.swing.JLabel();
      gridfield15 = new javax.swing.JLabel();
      gridfield19 = new javax.swing.JLabel();
      gridfield24 = new javax.swing.JLabel();
      gridfield25 = new javax.swing.JLabel();
      gridfield27 = new javax.swing.JLabel();
      gridfield29 = new javax.swing.JLabel();
      gridfield31 = new javax.swing.JLabel();
      gridfield33 = new javax.swing.JLabel();
      gridfield34 = new javax.swing.JLabel();
      gridfield40 = new javax.swing.JLabel();
      gridfield46 = new javax.swing.JLabel();
      gridfield47 = new javax.swing.JLabel();
      gridfield49 = new javax.swing.JLabel();
      gridfield51 = new javax.swing.JLabel();
      gridfield53 = new javax.swing.JLabel();
      gridfield55 = new javax.swing.JLabel();
      gridfield56 = new javax.swing.JLabel();
      gridfield61 = new javax.swing.JLabel();
      gridfield65 = new javax.swing.JLabel();
      gridfield72 = new javax.swing.JLabel();
      gridfield75 = new javax.swing.JLabel();
      gridfield77 = new javax.swing.JLabel();
      gridfield80 = new javax.swing.JLabel();
      griduser1 = new javax.swing.JLabel();
      griduser2 = new javax.swing.JLabel();
      griduser4 = new javax.swing.JLabel();
      griduser6 = new javax.swing.JLabel();
      griduser7 = new javax.swing.JLabel();
      griduser9 = new javax.swing.JLabel();
      griduser10 = new javax.swing.JLabel();
      griduser11 = new javax.swing.JLabel();
      griduser12 = new javax.swing.JLabel();
      griduser13 = new javax.swing.JLabel();
      griduser14 = new javax.swing.JLabel();
      griduser16 = new javax.swing.JLabel();
      griduser17 = new javax.swing.JLabel();
      griduser18 = new javax.swing.JLabel();
      griduser20 = new javax.swing.JLabel();
      griduser21 = new javax.swing.JLabel();
      griduser22 = new javax.swing.JLabel();
      griduser23 = new javax.swing.JLabel();
      griduser26 = new javax.swing.JLabel();
      griduser28 = new javax.swing.JLabel();
      griduser30 = new javax.swing.JLabel();
      griduser32 = new javax.swing.JLabel();
      griduser35 = new javax.swing.JLabel();
      griduser36 = new javax.swing.JLabel();
      griduser37 = new javax.swing.JLabel();
      griduser38 = new javax.swing.JLabel();
      griduser39 = new javax.swing.JLabel();
      griduser41 = new javax.swing.JLabel();
      griduser42 = new javax.swing.JLabel();
      griduser43 = new javax.swing.JLabel();
      griduser44 = new javax.swing.JLabel();
      griduser45 = new javax.swing.JLabel();
      griduser48 = new javax.swing.JLabel();
      griduser50 = new javax.swing.JLabel();
      griduser52 = new javax.swing.JLabel();
      griduser54 = new javax.swing.JLabel();
      griduser57 = new javax.swing.JLabel();
      griduser58 = new javax.swing.JLabel();
      griduser59 = new javax.swing.JLabel();
      griduser60 = new javax.swing.JLabel();
      griduser62 = new javax.swing.JLabel();
      griduser63 = new javax.swing.JLabel();
      griduser64 = new javax.swing.JLabel();
      griduser66 = new javax.swing.JLabel();
      griduser67 = new javax.swing.JLabel();
      griduser68 = new javax.swing.JLabel();
      griduser69 = new javax.swing.JLabel();
      griduser70 = new javax.swing.JLabel();
      griduser71 = new javax.swing.JLabel();
      griduser73 = new javax.swing.JLabel();
      griduser74 = new javax.swing.JLabel();
      griduser76 = new javax.swing.JLabel();
      griduser78 = new javax.swing.JLabel();
      griduser79 = new javax.swing.JLabel();
      backgroundGrid = new javax.swing.JLabel();
      userbutton1 = new javax.swing.JButton();
      userbutton2 = new javax.swing.JButton();
      userbutton4 = new javax.swing.JButton();
      userbutton6 = new javax.swing.JButton();
      userbutton7 = new javax.swing.JButton();
      userbutton9 = new javax.swing.JButton();
      userbutton10 = new javax.swing.JButton();
      userbutton11 = new javax.swing.JButton();
      userbutton12 = new javax.swing.JButton();
      userbutton13 = new javax.swing.JButton();
      userbutton14 = new javax.swing.JButton();
      userbutton16 = new javax.swing.JButton();
      userbutton17 = new javax.swing.JButton();
      userbutton18 = new javax.swing.JButton();
      userbutton20 = new javax.swing.JButton();
      userbutton21 = new javax.swing.JButton();
      userbutton22 = new javax.swing.JButton();
      userbutton23 = new javax.swing.JButton();
      userbutton26 = new javax.swing.JButton();
      userbutton28 = new javax.swing.JButton();
      userbutton30 = new javax.swing.JButton();
      userbutton32 = new javax.swing.JButton();
      userbutton35 = new javax.swing.JButton();
      userbutton36 = new javax.swing.JButton();
      userbutton37 = new javax.swing.JButton();
      userbutton38 = new javax.swing.JButton();
      userbutton39 = new javax.swing.JButton();
      userbutton41 = new javax.swing.JButton();
      userbutton42 = new javax.swing.JButton();
      userbutton43 = new javax.swing.JButton();
      userbutton44 = new javax.swing.JButton();
      userbutton45 = new javax.swing.JButton();
      userbutton48 = new javax.swing.JButton();
      userbutton50 = new javax.swing.JButton();
      userbutton52 = new javax.swing.JButton();
      userbutton54 = new javax.swing.JButton();
      userbutton57 = new javax.swing.JButton();
      userbutton58 = new javax.swing.JButton();
      userbutton59 = new javax.swing.JButton();
      userbutton60 = new javax.swing.JButton();
      userbutton62 = new javax.swing.JButton();
      userbutton63 = new javax.swing.JButton();
      userbutton64 = new javax.swing.JButton();
      userbutton66 = new javax.swing.JButton();
      userbutton67 = new javax.swing.JButton();
      userbutton68 = new javax.swing.JButton();
      userbutton69 = new javax.swing.JButton();
      userbutton70 = new javax.swing.JButton();
      userbutton71 = new javax.swing.JButton();
      userbutton73 = new javax.swing.JButton();
      userbutton74 = new javax.swing.JButton();
      userbutton76 = new javax.swing.JButton();
      userbutton78 = new javax.swing.JButton();
      userbutton79 = new javax.swing.JButton();

      popupUser.setMaximumSize(new java.awt.Dimension(363, 200));
      popupUser.setMinimumSize(new java.awt.Dimension(363, 200));
      popupUser.setResizable(false);

      popupUserInput.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            popupUserInputActionPerformed(evt);
         }
      });

      popupDirections.setText("Enter an integer 1-9 to input into the selected box:");

      popupError.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      popupError.setText("ERROR: Input was not an integer. Try again.");

      popupOkButton.setText("Ok");
      popupOkButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            popupOkButtonActionPerformed(evt);
         }
      });

      popupCancelButton.setText("Cancel");
      popupCancelButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            popupCancelButtonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout popupUserLayout = new javax.swing.GroupLayout(popupUser.getContentPane());
      popupUser.getContentPane().setLayout(popupUserLayout);
      popupUserLayout.setHorizontalGroup(
         popupUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, popupUserLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(popupUserInput, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(144, 144, 144))
         .addGroup(popupUserLayout.createSequentialGroup()
            .addGap(127, 127, 127)
            .addComponent(popupOkButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(popupCancelButton)
            .addGap(0, 0, Short.MAX_VALUE))
         .addGroup(popupUserLayout.createSequentialGroup()
            .addGroup(popupUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(popupUserLayout.createSequentialGroup()
                  .addGap(41, 41, 41)
                  .addComponent(popupDirections))
               .addGroup(popupUserLayout.createSequentialGroup()
                  .addGap(29, 29, 29)
                  .addComponent(popupError)))
            .addContainerGap(31, Short.MAX_VALUE))
      );
      popupUserLayout.setVerticalGroup(
         popupUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, popupUserLayout.createSequentialGroup()
            .addGap(21, 21, 21)
            .addComponent(popupDirections)
            .addGap(12, 12, 12)
            .addComponent(popupUserInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(popupUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(popupOkButton)
               .addComponent(popupCancelButton))
            .addGap(18, 18, 18)
            .addComponent(popupError)
            .addContainerGap(46, Short.MAX_VALUE))
      );

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setAutoRequestFocus(false);
      setBackground(new java.awt.Color(255, 255, 255));
      setMinimumSize(new java.awt.Dimension(600, 400));
      setResizable(false);

      mainPanel.setMaximumSize(new java.awt.Dimension(600, 400));
      mainPanel.setPreferredSize(new java.awt.Dimension(600, 400));
      mainPanel.setLayout(new java.awt.CardLayout());

      SplashPage.setMinimumSize(new java.awt.Dimension(600, 400));
      SplashPage.setPreferredSize(new java.awt.Dimension(600, 400));
      /*
      methods: ActionListener listen1 and listen2
      purposes: Instances of setting the timer for the splash page,
      so it may switch to the main menu after 3 seconds,
      and the date+time implementation for the play page.
      */
      ActionListener listen = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //Put card layout here
            CardLayout card = (CardLayout)mainPanel.getLayout();
            card.show(mainPanel, "mainmenuCard");
         }
      };

      Timer t = new Timer(3000, listen);
      t.setRepeats(false);
      t.start();

      ActionListener listen2 = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //Continuously update time here
            SimpleDateFormat bub = new SimpleDateFormat("MMMMMMMMM dd, yyyy  HH:mm:ss");
            Date current = new Date();
            String theDate = bub.format(current);
            jLabel11.setText(theDate);
         }
      };

      Timer tDate = new Timer(500, listen2);
      tDate.start();

      ProjectTitle.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
      ProjectTitle.setText("CS 245 Project: Summer 2016");

      TeamName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
      TeamName.setText("By: Team Snow");

      javax.swing.GroupLayout SplashPageLayout = new javax.swing.GroupLayout(SplashPage);
      SplashPage.setLayout(SplashPageLayout);
      SplashPageLayout.setHorizontalGroup(
         SplashPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(SplashPageLayout.createSequentialGroup()
            .addGroup(SplashPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(SplashPageLayout.createSequentialGroup()
                  .addGap(226, 226, 226)
                  .addComponent(TeamName))
               .addGroup(SplashPageLayout.createSequentialGroup()
                  .addGap(41, 41, 41)
                  .addComponent(ProjectTitle)))
            .addContainerGap(49, Short.MAX_VALUE))
      );
      SplashPageLayout.setVerticalGroup(
         SplashPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(SplashPageLayout.createSequentialGroup()
            .addGap(35, 35, 35)
            .addComponent(ProjectTitle)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
            .addComponent(TeamName)
            .addGap(116, 116, 116))
      );

      mainPanel.add(SplashPage, "splashCard");
      //CardLayout card = (CardLayout)mainPanel.getLayout();
      //card.show(mainPanel, "mainmenuCard");

      MainMenu.setMaximumSize(new java.awt.Dimension(600, 400));
      MainMenu.setMinimumSize(new java.awt.Dimension(600, 400));
      MainMenu.setPreferredSize(new java.awt.Dimension(600, 400));

      PlayButton.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
      PlayButton.setText("Play");
      PlayButton.setToolTipText("click to play");
      PlayButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            PlayButtonActionPerformed(evt);
         }
      });

      HighScoresButton.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
      HighScoresButton.setText("High Scores");
      HighScoresButton.setToolTipText("click to view the high scores");
      HighScoresButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            HighScoresButtonActionPerformed(evt);
         }
      });

      CreditsButton.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
      CreditsButton.setText("Credits");
      CreditsButton.setToolTipText("click to view Authors");
      CreditsButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            CreditsButtonActionPerformed(evt);
         }
      });

      TeamLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/teamlogo.png"))); // NOI18N
      TeamLogo.setText("jLabel1");

      javax.swing.GroupLayout MainMenuLayout = new javax.swing.GroupLayout(MainMenu);
      MainMenu.setLayout(MainMenuLayout);
      MainMenuLayout.setHorizontalGroup(
         MainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(MainMenuLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(TeamLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
            .addGroup(MainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(CreditsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(HighScoresButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(PlayButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap())
      );
      MainMenuLayout.setVerticalGroup(
         MainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(MainMenuLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(TeamLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(127, Short.MAX_VALUE))
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainMenuLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PlayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(HighScoresButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(CreditsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );

      mainPanel.add(MainMenu, "mainmenuCard");

      CreditsMenu.setMaximumSize(new java.awt.Dimension(600, 400));
      CreditsMenu.setMinimumSize(new java.awt.Dimension(600, 400));

      backButton0.setText("Back");
      backButton0.setToolTipText("Back to Main Menu");
      backButton0.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            backButton0ActionPerformed(evt);
         }
      });

      jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
      jLabel1.setText("CREDITS");

      jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      jLabel2.setText("Troy Dome, 009572849");

      jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      jLabel3.setText("Daniel Fierros, 009061390");

      javax.swing.GroupLayout CreditsMenuLayout = new javax.swing.GroupLayout(CreditsMenu);
      CreditsMenu.setLayout(CreditsMenuLayout);
      CreditsMenuLayout.setHorizontalGroup(
         CreditsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(CreditsMenuLayout.createSequentialGroup()
            .addGroup(CreditsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(CreditsMenuLayout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(backButton0))
               .addGroup(CreditsMenuLayout.createSequentialGroup()
                  .addGap(213, 213, 213)
                  .addGroup(CreditsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jLabel1)
                     .addComponent(jLabel3)
                     .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(207, Short.MAX_VALUE))
      );
      CreditsMenuLayout.setVerticalGroup(
         CreditsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(CreditsMenuLayout.createSequentialGroup()
            .addGap(92, 92, 92)
            .addComponent(jLabel1)
            .addGap(28, 28, 28)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 203, Short.MAX_VALUE)
            .addComponent(backButton0)
            .addContainerGap())
      );

      mainPanel.add(CreditsMenu, "creditsCard");

      HighScoresMenu.setMaximumSize(new java.awt.Dimension(600, 400));
      HighScoresMenu.setMinimumSize(new java.awt.Dimension(600, 400));
      HighScoresMenu.setPreferredSize(new java.awt.Dimension(600, 400));

      backButton1.setText("Back");
      backButton1.setToolTipText("Back to Main Menu");
      backButton1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            backButton1ActionPerformed(evt);
         }
      });

      jLabel4.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
      jLabel4.setText("HIGH SCORES");

      highscore1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      highscore1.setText("ABC ... 00000");

      highscore2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      highscore2.setText("ABC ... 00000");

      highscore3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      highscore3.setText("ABC ... 00000");

      highscore4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      highscore4.setText("ABC ... 00000");

      javax.swing.GroupLayout HighScoresMenuLayout = new javax.swing.GroupLayout(HighScoresMenu);
      HighScoresMenu.setLayout(HighScoresMenuLayout);
      HighScoresMenuLayout.setHorizontalGroup(
         HighScoresMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(HighScoresMenuLayout.createSequentialGroup()
            .addGroup(HighScoresMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(HighScoresMenuLayout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(backButton1))
               .addGroup(HighScoresMenuLayout.createSequentialGroup()
                  .addGap(171, 171, 171)
                  .addGroup(HighScoresMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(highscore1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(jLabel4)
                     .addComponent(highscore2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(highscore3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(highscore4, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(198, Short.MAX_VALUE))
      );
      HighScoresMenuLayout.setVerticalGroup(
         HighScoresMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(HighScoresMenuLayout.createSequentialGroup()
            .addGap(88, 88, 88)
            .addComponent(jLabel4)
            .addGap(18, 18, 18)
            .addComponent(highscore1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(highscore2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(highscore3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(highscore4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
            .addComponent(backButton1)
            .addContainerGap())
      );

      mainPanel.add(HighScoresMenu, "highscoresCard");

      PlayMenu.setMaximumSize(new java.awt.Dimension(600, 400));
      PlayMenu.setMinimumSize(new java.awt.Dimension(600, 400));

      jLabel9.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
      jLabel9.setText("HangMan");

      skipButton.setText("Skip");
      skipButton.setName("skip"); // NOI18N
      skipButton.setToolTipText("click to go to next game");
      skipButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            skipButtonActionPerformed(evt);
         }
      });

      aButton.setText("A");
      aButton.setToolTipText("Click any letter to play:"
         + "A");
      aButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            aButtonActionPerformed(evt);
         }
      });

      bButton.setText("B");
      bButton.setToolTipText("B");
      bButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            bButtonActionPerformed(evt);
         }
      });

      cButton.setText("C");
      cButton.setToolTipText("C");
      cButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            cButtonActionPerformed(evt);
         }
      });

      dButton.setText("D");
      dButton.setToolTipText("D");
      dButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            dButtonActionPerformed(evt);
         }
      });

      eButton.setText("E");
      eButton.setToolTipText("E");
      eButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            eButtonActionPerformed(evt);
         }
      });

      fButton.setText("F");
      fButton.setToolTipText("F");
      fButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            fButtonActionPerformed(evt);
         }
      });

      gButton.setText("G");
      gButton.setToolTipText("G");
      gButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            gButtonActionPerformed(evt);
         }
      });

      hButton.setText("H");
      hButton.setToolTipText("H");
      hButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            hButtonActionPerformed(evt);
         }
      });

      iButton.setText("I");
      iButton.setToolTipText("I");
      iButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            iButtonActionPerformed(evt);
         }
      });

      jButton.setText("J");
      jButton.setToolTipText("J");
      jButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonActionPerformed(evt);
         }
      });

      kButton.setText("K");
      kButton.setToolTipText("K");
      kButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            kButtonActionPerformed(evt);
         }
      });

      LButton.setText("L");
      LButton.setToolTipText("L");
      LButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            LButtonActionPerformed(evt);
         }
      });

      mButton.setText("M");
      mButton.setToolTipText("M");
      mButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            mButtonActionPerformed(evt);
         }
      });

      sButton.setText("S");
      sButton.setToolTipText("S");
      sButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            sButtonActionPerformed(evt);
         }
      });

      tButton.setText("T");
      tButton.setToolTipText("T");
      tButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            tButtonActionPerformed(evt);
         }
      });

      uButton.setText("U");
      uButton.setToolTipText("U");
      uButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            uButtonActionPerformed(evt);
         }
      });

      vButton.setText("V");
      vButton.setToolTipText("V");
      vButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            vButtonActionPerformed(evt);
         }
      });

      oButton.setText("O");
      oButton.setToolTipText("O");
      oButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            oButtonActionPerformed(evt);
         }
      });

      wButton.setText("W");
      wButton.setToolTipText("W");
      wButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            wButtonActionPerformed(evt);
         }
      });

      pButton.setText("P");
      pButton.setToolTipText("P");
      pButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            pButtonActionPerformed(evt);
         }
      });

      xButton.setText("X");
      xButton.setToolTipText("X");
      xButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            xButtonActionPerformed(evt);
         }
      });

      yButton.setText("Y");
      yButton.setToolTipText("Y");
      yButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            yButtonActionPerformed(evt);
         }
      });

      zButton.setText("Z");
      zButton.setToolTipText("Z");
      zButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            zButtonActionPerformed(evt);
         }
      });

      qButton.setText("Q");
      qButton.setToolTipText("Q");
      qButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            qButtonActionPerformed(evt);
         }
      });

      nButton.setText("N");
      nButton.setToolTipText("N");
      nButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            nButtonActionPerformed(evt);
         }
      });

      rButton.setText("R");
      rButton.setToolTipText("R");
      rButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            rButtonActionPerformed(evt);
         }
      });

      jLabel11.setText("Date goes here");

      jLabel15.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
      jLabel15.setText("Score");

      jLabelLetter1.setText("   ");

      jLabelLetter3.setText("   ");

      jLabelLetter2.setText("   ");

      jLabelLetter4.setText("   ");

      jLabelLetter5.setText("   ");

      jLabelLetter6.setText("   ");

      jLabelLetter7.setText("   ");

      jLabelLetter8.setText("   ");

      javax.swing.GroupLayout PlayMenuLayout = new javax.swing.GroupLayout(PlayMenu);
      PlayMenu.setLayout(PlayMenuLayout);
      PlayMenuLayout.setHorizontalGroup(
         PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(PlayMenuLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PlayMenuLayout.createSequentialGroup()
                  .addComponent(aButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(bButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(cButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(dButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(eButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(fButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(gButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(hButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(iButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(kButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(LButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(mButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
               .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PlayMenuLayout.createSequentialGroup()
                  .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(PlayMenuLayout.createSequentialGroup()
                        .addComponent(nButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(oButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addComponent(jLabelSpcae, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGap(0, 0, Short.MAX_VALUE))
               .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PlayMenuLayout.createSequentialGroup()
                  .addComponent(jLabelLetter1)
                  .addGap(21, 21, 21)
                  .addComponent(jLabelLetter2)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(jLabelLetter3)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(jLabelLetter4)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(jLabelLetter5)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(jLabelLetter6)
                  .addGap(33, 33, 33)
                  .addComponent(jLabelLetter7)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(jLabelLetter8))
               .addGroup(PlayMenuLayout.createSequentialGroup()
                  .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                     .addGroup(PlayMenuLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(109, 109, 109)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11))
                     .addGroup(PlayMenuLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabelHangman, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(skipButton)))
                  .addGap(15, 15, 15))))
      );
      PlayMenuLayout.setVerticalGroup(
         PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlayMenuLayout.createSequentialGroup()
            .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(PlayMenuLayout.createSequentialGroup()
                  .addGap(18, 18, 18)
                  .addComponent(jLabel9))
               .addGroup(PlayMenuLayout.createSequentialGroup()
                  .addContainerGap()
                  .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(PlayMenuLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelHangman, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addGroup(PlayMenuLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(skipButton)))))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabelLetter1)
               .addComponent(jLabelLetter3)
               .addComponent(jLabelLetter2)
               .addComponent(jLabelLetter4)
               .addComponent(jLabelLetter5)
               .addComponent(jLabelLetter6)
               .addComponent(jLabelLetter8)
               .addComponent(jLabelLetter7))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabelSpcae, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(aButton)
               .addComponent(bButton)
               .addComponent(cButton)
               .addComponent(dButton)
               .addComponent(eButton)
               .addComponent(fButton)
               .addComponent(gButton)
               .addComponent(hButton)
               .addComponent(iButton)
               .addComponent(jButton)
               .addComponent(kButton)
               .addComponent(LButton)
               .addComponent(mButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(nButton)
               .addComponent(oButton)
               .addComponent(pButton)
               .addComponent(qButton)
               .addComponent(rButton)
               .addComponent(sButton)
               .addComponent(tButton)
               .addComponent(uButton)
               .addComponent(vButton)
               .addComponent(wButton)
               .addComponent(xButton)
               .addComponent(yButton)
               .addComponent(zButton))
            .addGap(15, 15, 15))
      );

      ActionListener listen3 = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //Continuously update score

            jLabel15.setText("Score:" + score);

            if (randNumber == 2)
            {
               //short spaces
               jLabelSpcae.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/nSpace.png")));
            }
            else
            {
               //long spaces
               jLabelSpcae.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/longSpace.png")));
            }
            if(count ==0)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/startScreen.png")));
            }

            else if(count ==1)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp1.png")));
            }
            else if(count == 2)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp3.png")));
            }
            else if(count == 3)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp4.png")));
            }
            else if(count == 4)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp5.png")));
            }
            else if(count == 5)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp6.png")));
            }
            else if(count == 6)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp7.png")));
            }

            switch(randNumber)
            {
               case 0:
               if (wordCount == 8)
               {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "PACgameCard");

               }
               break;
               case 1:
               if (wordCount == 8)
               {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "PACgameCard");

               }
               break;
               case 2:
               if (wordCount == 5)
               {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "PACgameCard");

               }
               break;
               case 3:
               if (wordCount == 8)
               {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "PACgameCard");

               }
               break;
               case 4:
               if (wordCount == 8)
               {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "PACgameCard");

               }
               break;
            }

         }
      };
      Timer tScore = new Timer(0, listen3);
      tScore.start();

      mainPanel.add(PlayMenu, "playCard");

      PointAndClickGame.setMaximumSize(new java.awt.Dimension(600, 400));
      PointAndClickGame.setMinimumSize(new java.awt.Dimension(600, 400));
      PointAndClickGame.setPreferredSize(new java.awt.Dimension(600, 400));

      jLabelPACClock.setText("Clock");

      jButtonBlue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/blue.png"))); // NOI18N
      jButtonBlue.setBorderPainted(false);
      jButtonBlue.setContentAreaFilled(false);
      jButtonBlue.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/bOver.png"))); // NOI18N
      jButtonBlue.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonBlueActionPerformed(evt);
         }
      });

      jButtonPurple.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/purple.png"))); // NOI18N
      jButtonPurple.setBorderPainted(false);
      jButtonPurple.setContentAreaFilled(false);
      jButtonPurple.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/pOver.png"))); // NOI18N
      jButtonPurple.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonPurpleActionPerformed(evt);
         }
      });

      jButtonRed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/red.png"))); // NOI18N
      jButtonRed.setBorderPainted(false);
      jButtonRed.setContentAreaFilled(false);
      jButtonRed.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/rOver.png"))); // NOI18N
      jButtonRed.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonRedActionPerformed(evt);
         }
      });

      jButtonYellow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/yellow.png"))); // NOI18N
      jButtonYellow.setBorderPainted(false);
      jButtonYellow.setContentAreaFilled(false);
      jButtonYellow.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/yOver.png"))); // NOI18N
      jButtonYellow.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonYellowActionPerformed(evt);
         }
      });

      jLabelScorePAC.setText("Score:");

      jButtonGreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/green.png"))); // NOI18N
      jButtonGreen.setBorderPainted(false);
      jButtonGreen.setContentAreaFilled(false);
      jButtonGreen.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/gOver.png"))); // NOI18N
      jButtonGreen.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonGreenActionPerformed(evt);
         }
      });

      jLabelColor.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
      jLabelColor.setText("Color");

      javax.swing.GroupLayout PointAndClickGameLayout = new javax.swing.GroupLayout(PointAndClickGame);
      PointAndClickGame.setLayout(PointAndClickGameLayout);
      PointAndClickGameLayout.setHorizontalGroup(
         PointAndClickGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(PointAndClickGameLayout.createSequentialGroup()
            .addGap(21, 21, 21)
            .addComponent(jButtonBlue)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelColor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(37, 37, 37)
            .addComponent(jButtonYellow)
            .addGap(49, 49, 49))
         .addGroup(PointAndClickGameLayout.createSequentialGroup()
            .addGap(94, 94, 94)
            .addComponent(jButtonGreen)
            .addGap(49, 49, 49)
            .addComponent(jButtonPurple)
            .addGap(49, 49, 49)
            .addComponent(jButtonRed)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PointAndClickGameLayout.createSequentialGroup()
            .addGap(237, 237, 237)
            .addComponent(jLabelScorePAC, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelPACClock)
            .addContainerGap())
      );
      PointAndClickGameLayout.setVerticalGroup(
         PointAndClickGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(PointAndClickGameLayout.createSequentialGroup()
            .addGap(12, 12, 12)
            .addGroup(PointAndClickGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabelPACClock)
               .addComponent(jLabelScorePAC))
            .addGroup(PointAndClickGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PointAndClickGameLayout.createSequentialGroup()
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(jButtonBlue)
                  .addGap(16, 16, 16)
                  .addGroup(PointAndClickGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jButtonPurple)
                     .addComponent(jButtonGreen))
                  .addGap(43, 43, 43))
               .addGroup(PointAndClickGameLayout.createSequentialGroup()
                  .addGroup(PointAndClickGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PointAndClickGameLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jButtonYellow))
                     .addGroup(PointAndClickGameLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabelColor)))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(jButtonRed)
                  .addGap(88, 88, 88))))
      );

      ActionListener lPACGame = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //Continuously update time here
            SimpleDateFormat bub = new SimpleDateFormat("MMMMMMMMM dd, yyyy  HH:mm:ss");
            Date current = new Date();
            String theDate = bub.format(current);
            jLabelPACClock.setText(theDate);
         }
      };

      Timer datePACGame = new Timer(500, lPACGame);
      datePACGame.start();

      ActionListener lPAC2 = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //does game operations
            jLabelColor.setText(colorDisplay);
            jLabelScorePAC.setText("Score:" + score);
            if (countPAC == 5)
            {
               CardLayout card = (CardLayout)mainPanel.getLayout();
               card.show(mainPanel, "sudokuCard");
            }
            else
            {
               switch(randNumForColor)
               {
                  case 0://green
                  //System.out.println("green");
                  jLabelColor.setForeground(new Color(76, 153, 0));
                  break;
                  case 1://purple
                  //System.out.println("purple");
                  jLabelColor.setForeground(new Color(51, 0, 102));
                  break;
                  case 2://yellow
                  //System.out.println("yellow");
                  jLabelColor.setForeground(Color.YELLOW);
                  break;
                  case 3://red
                  //System.out.println("red");
                  jLabelColor.setForeground(Color.RED);
                  break;
                  case 4://blue
                  //System.out.println("blue");
                  jLabelColor.setForeground(new Color(51, 153, 255));
                  break;
               }
            }
         }
      };
      Timer tPAC = new Timer(0, lPAC2);
      tPAC.start();

      mainPanel.add(PointAndClickGame, "PACgameCard");

      End.setMaximumSize(new java.awt.Dimension(600, 400));
      End.setMinimumSize(new java.awt.Dimension(600, 400));
      End.setName("end"); // NOI18N
      End.setPreferredSize(new java.awt.Dimension(600, 400));

      jLabel10.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
      jLabel10.setText("Game Over");

      bTMButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
      bTMButton.setText("End Game");
      bTMButton.setToolTipText("Back to Main Menu");
      bTMButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            bTMButtonActionPerformed(evt);
         }
      });

      jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
      jLabel13.setText("Score:");

      javax.swing.GroupLayout EndLayout = new javax.swing.GroupLayout(End);
      End.setLayout(EndLayout);
      EndLayout.setHorizontalGroup(
         EndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(EndLayout.createSequentialGroup()
            .addGroup(EndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(EndLayout.createSequentialGroup()
                  .addGap(196, 196, 196)
                  .addComponent(jLabel10))
               .addGroup(EndLayout.createSequentialGroup()
                  .addGap(238, 238, 238)
                  .addGroup(EndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jLabel13)
                     .addComponent(bTMButton))))
            .addContainerGap(211, Short.MAX_VALUE))
      );
      EndLayout.setVerticalGroup(
         EndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(EndLayout.createSequentialGroup()
            .addGap(100, 100, 100)
            .addComponent(jLabel10)
            .addGap(18, 18, 18)
            .addComponent(jLabel13)
            .addGap(18, 18, 18)
            .addComponent(bTMButton)
            .addContainerGap(153, Short.MAX_VALUE))
      );

      ActionListener listen4 = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //Continuously update score

            jLabel13.setText("Score: " + score);
         }
      };
      Timer FScore = new Timer(0, listen4);
      // FScore.setRepeats(false);
      FScore.start();

      mainPanel.add(End, "endCard");

      HighScoreSet.setMaximumSize(new java.awt.Dimension(600, 400));
      HighScoreSet.setMinimumSize(new java.awt.Dimension(600, 400));
      HighScoreSet.setPreferredSize(new java.awt.Dimension(600, 400));

      jLabel12.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
      jLabel12.setText("New High Score!");

      jLabel14.setText("Enter Your Initials Below!");

      userName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
      userName.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userNameActionPerformed(evt);
         }
      });

      doneButton.setText("Done");
      doneButton.setToolTipText("Click to submit");
      doneButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            doneButtonActionPerformed(evt);
         }
      });

      jLabel5.setText(" (If not 3 letters or not text, ABC by default)");

      javax.swing.GroupLayout HighScoreSetLayout = new javax.swing.GroupLayout(HighScoreSet);
      HighScoreSet.setLayout(HighScoreSetLayout);
      HighScoreSetLayout.setHorizontalGroup(
         HighScoreSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(HighScoreSetLayout.createSequentialGroup()
            .addGroup(HighScoreSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(HighScoreSetLayout.createSequentialGroup()
                  .addGap(201, 201, 201)
                  .addComponent(jLabel12))
               .addGroup(HighScoreSetLayout.createSequentialGroup()
                  .addGap(262, 262, 262)
                  .addComponent(doneButton))
               .addGroup(HighScoreSetLayout.createSequentialGroup()
                  .addGap(242, 242, 242)
                  .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(HighScoreSetLayout.createSequentialGroup()
                  .addGap(223, 223, 223)
                  .addComponent(jLabel14))
               .addGroup(HighScoreSetLayout.createSequentialGroup()
                  .addGap(174, 174, 174)
                  .addComponent(jLabel5)))
            .addContainerGap(188, Short.MAX_VALUE))
      );
      HighScoreSetLayout.setVerticalGroup(
         HighScoreSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(HighScoreSetLayout.createSequentialGroup()
            .addGap(98, 98, 98)
            .addComponent(jLabel12)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel14)
            .addGap(2, 2, 2)
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(doneButton)
            .addContainerGap(156, Short.MAX_VALUE))
      );

      mainPanel.add(HighScoreSet, "setCard");

      ActionListener sudokuClockListener = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //Continuously update time here for the sudoku panel
            SimpleDateFormat bub = new SimpleDateFormat("MMMMMMMMM dd, yyyy  HH:mm:ss");
            Date current = new Date();
            String theDate = bub.format(current);
            sudokuClock.setText(theDate);
         }
      };

      Timer sudokuClockTimer = new Timer(500, sudokuClockListener);
      sudokuClockTimer.start();
      SudokuGame.setLayout(null);

      SudokuTitle.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
      SudokuTitle.setText("Sudoku");
      SudokuGame.add(SudokuTitle);
      SudokuTitle.setBounds(10, 10, 89, 32);

      sudokuClock.setText("Clock");
      SudokuGame.add(sudokuClock);
      sudokuClock.setBounds(440, 6, 160, 16);

      sudokuSubmit.setText("Submit");
      sudokuSubmit.setToolTipText("click to check your answer");
      sudokuSubmit.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            sudokuSubmitActionPerformed(evt);
         }
      });
      SudokuGame.add(sudokuSubmit);
      sudokuSubmit.setBounds(30, 310, 70, 32);

      sudokuQuit.setText("Quit");
      sudokuQuit.setToolTipText("Click to quit the game");
      sudokuQuit.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            sudokuQuitActionPerformed(evt);
         }
      });
      SudokuGame.add(sudokuQuit);
      sudokuQuit.setBounds(510, 310, 53, 32);

      gridfield0.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield0.setText("8");
      SudokuGame.add(gridfield0);
      gridfield0.setBounds(140, 30, 20, 40);

      gridfield3.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield3.setText("4");
      SudokuGame.add(gridfield3);
      gridfield3.setBounds(260, 40, 20, 20);

      gridfield5.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield5.setText("6");
      SudokuGame.add(gridfield5);
      gridfield5.setBounds(340, 30, 20, 40);

      gridfield8.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield8.setText(" 7");
      SudokuGame.add(gridfield8);
      gridfield8.setBounds(450, 40, 20, 30);

      gridfield15.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield15.setText("4");
      SudokuGame.add(gridfield15);
      gridfield15.setBounds(380, 70, 20, 30);

      gridfield19.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield19.setText("1");
      SudokuGame.add(gridfield19);
      gridfield19.setBounds(180, 110, 20, 30);

      gridfield24.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield24.setText("6");
      SudokuGame.add(gridfield24);
      gridfield24.setBounds(375, 110, 20, 30);

      gridfield25.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield25.setText("5");
      SudokuGame.add(gridfield25);
      gridfield25.setBounds(415, 110, 20, 30);

      gridfield27.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield27.setText("5");
      SudokuGame.add(gridfield27);
      gridfield27.setBounds(140, 150, 20, 30);

      gridfield29.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield29.setText("9");
      SudokuGame.add(gridfield29);
      gridfield29.setBounds(220, 150, 20, 30);

      gridfield31.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield31.setText("3");
      SudokuGame.add(gridfield31);
      gridfield31.setBounds(300, 150, 20, 30);

      gridfield33.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield33.setText("7");
      SudokuGame.add(gridfield33);
      gridfield33.setBounds(380, 150, 20, 30);

      gridfield34.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield34.setText("8");
      SudokuGame.add(gridfield34);
      gridfield34.setBounds(420, 150, 20, 40);

      gridfield40.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield40.setText("7");
      SudokuGame.add(gridfield40);
      gridfield40.setBounds(300, 190, 20, 30);

      gridfield46.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield46.setText("4");
      SudokuGame.add(gridfield46);
      gridfield46.setBounds(180, 230, 20, 30);

      gridfield47.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield47.setText("8");
      SudokuGame.add(gridfield47);
      gridfield47.setBounds(220, 230, 20, 30);

      gridfield49.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield49.setText("2");
      SudokuGame.add(gridfield49);
      gridfield49.setBounds(300, 230, 20, 30);

      gridfield51.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield51.setText("1");
      SudokuGame.add(gridfield51);
      gridfield51.setBounds(375, 230, 20, 30);

      gridfield53.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield53.setText(" 3");
      SudokuGame.add(gridfield53);
      gridfield53.setBounds(450, 230, 20, 30);

      gridfield55.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield55.setText("5");
      SudokuGame.add(gridfield55);
      gridfield55.setBounds(180, 270, 20, 30);

      gridfield56.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield56.setText("2");
      SudokuGame.add(gridfield56);
      gridfield56.setBounds(220, 270, 20, 30);

      gridfield61.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield61.setText("9");
      SudokuGame.add(gridfield61);
      gridfield61.setBounds(415, 270, 20, 30);

      gridfield65.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield65.setText("1");
      SudokuGame.add(gridfield65);
      gridfield65.setBounds(220, 310, 20, 30);

      gridfield72.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield72.setText("3");
      SudokuGame.add(gridfield72);
      gridfield72.setBounds(140, 350, 20, 30);

      gridfield75.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield75.setText("9");
      SudokuGame.add(gridfield75);
      gridfield75.setBounds(260, 350, 20, 30);

      gridfield77.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield77.setText("2");
      SudokuGame.add(gridfield77);
      gridfield77.setBounds(340, 350, 20, 30);

      gridfield80.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
      gridfield80.setText(" 5");
      SudokuGame.add(gridfield80);
      gridfield80.setBounds(450, 350, 20, 30);

      griduser1.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser1.setText("0");
      SudokuGame.add(griduser1);
      griduser1.setBounds(180, 30, 20, 40);

      griduser2.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser2.setText("0");
      SudokuGame.add(griduser2);
      griduser2.setBounds(220, 30, 20, 40);

      griduser4.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser4.setText("0");
      SudokuGame.add(griduser4);
      griduser4.setBounds(300, 30, 20, 40);

      griduser6.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser6.setText("0");
      SudokuGame.add(griduser6);
      griduser6.setBounds(380, 30, 20, 40);

      griduser7.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser7.setText("0");
      SudokuGame.add(griduser7);
      griduser7.setBounds(420, 30, 20, 40);

      griduser9.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser9.setText("0");
      SudokuGame.add(griduser9);
      griduser9.setBounds(140, 70, 20, 40);

      griduser10.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser10.setText("0");
      SudokuGame.add(griduser10);
      griduser10.setBounds(180, 70, 20, 40);

      griduser11.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser11.setText("0");
      SudokuGame.add(griduser11);
      griduser11.setBounds(220, 70, 20, 40);

      griduser12.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser12.setText("0");
      SudokuGame.add(griduser12);
      griduser12.setBounds(260, 70, 20, 40);

      griduser13.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser13.setText("0");
      SudokuGame.add(griduser13);
      griduser13.setBounds(300, 70, 20, 40);

      griduser14.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser14.setText("0");
      SudokuGame.add(griduser14);
      griduser14.setBounds(340, 70, 20, 40);

      griduser16.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser16.setText("0");
      SudokuGame.add(griduser16);
      griduser16.setBounds(420, 70, 20, 40);

      griduser17.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser17.setText("0");
      SudokuGame.add(griduser17);
      griduser17.setBounds(460, 70, 20, 40);

      griduser18.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser18.setText("0");
      SudokuGame.add(griduser18);
      griduser18.setBounds(140, 110, 20, 40);

      griduser20.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser20.setText("0");
      SudokuGame.add(griduser20);
      griduser20.setBounds(220, 110, 20, 40);

      griduser21.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser21.setText("0");
      SudokuGame.add(griduser21);
      griduser21.setBounds(260, 110, 20, 40);

      griduser22.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser22.setText("0");
      SudokuGame.add(griduser22);
      griduser22.setBounds(300, 110, 20, 40);

      griduser23.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser23.setText("0");
      SudokuGame.add(griduser23);
      griduser23.setBounds(340, 110, 20, 40);

      griduser26.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser26.setText("0");
      SudokuGame.add(griduser26);
      griduser26.setBounds(460, 110, 20, 40);

      griduser28.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser28.setText("0");
      SudokuGame.add(griduser28);
      griduser28.setBounds(180, 150, 20, 40);

      griduser30.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser30.setText("0");
      SudokuGame.add(griduser30);
      griduser30.setBounds(260, 150, 20, 40);

      griduser32.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser32.setText("0");
      SudokuGame.add(griduser32);
      griduser32.setBounds(340, 150, 20, 40);

      griduser35.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser35.setText("0");
      SudokuGame.add(griduser35);
      griduser35.setBounds(460, 150, 20, 40);

      griduser36.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser36.setText("0");
      SudokuGame.add(griduser36);
      griduser36.setBounds(140, 190, 20, 40);

      griduser37.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser37.setText("0");
      SudokuGame.add(griduser37);
      griduser37.setBounds(180, 190, 20, 40);

      griduser38.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser38.setText("0");
      SudokuGame.add(griduser38);
      griduser38.setBounds(220, 190, 20, 40);

      griduser39.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser39.setText("0");
      SudokuGame.add(griduser39);
      griduser39.setBounds(260, 190, 20, 40);

      griduser41.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser41.setText("0");
      SudokuGame.add(griduser41);
      griduser41.setBounds(340, 190, 20, 40);

      griduser42.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser42.setText("0");
      SudokuGame.add(griduser42);
      griduser42.setBounds(380, 190, 20, 40);

      griduser43.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser43.setText("0");
      SudokuGame.add(griduser43);
      griduser43.setBounds(420, 190, 20, 40);

      griduser44.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser44.setText("0");
      SudokuGame.add(griduser44);
      griduser44.setBounds(460, 190, 20, 40);

      griduser45.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser45.setText("0");
      SudokuGame.add(griduser45);
      griduser45.setBounds(140, 230, 20, 40);

      griduser48.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser48.setText("0");
      SudokuGame.add(griduser48);
      griduser48.setBounds(260, 230, 20, 40);

      griduser50.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser50.setText("0");
      SudokuGame.add(griduser50);
      griduser50.setBounds(340, 230, 20, 40);

      griduser52.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser52.setText("0");
      SudokuGame.add(griduser52);
      griduser52.setBounds(420, 230, 20, 40);

      griduser54.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser54.setText("0");
      SudokuGame.add(griduser54);
      griduser54.setBounds(140, 270, 20, 40);

      griduser57.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser57.setText("0");
      SudokuGame.add(griduser57);
      griduser57.setBounds(260, 270, 20, 40);

      griduser58.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser58.setText("0");
      SudokuGame.add(griduser58);
      griduser58.setBounds(300, 270, 20, 40);

      griduser59.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser59.setText("0");
      SudokuGame.add(griduser59);
      griduser59.setBounds(340, 270, 20, 40);

      griduser60.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser60.setText("0");
      SudokuGame.add(griduser60);
      griduser60.setBounds(380, 270, 20, 40);

      griduser62.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser62.setText("0");
      SudokuGame.add(griduser62);
      griduser62.setBounds(460, 270, 20, 40);

      griduser63.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser63.setText("0");
      SudokuGame.add(griduser63);
      griduser63.setBounds(140, 310, 20, 40);

      griduser64.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser64.setText("0");
      SudokuGame.add(griduser64);
      griduser64.setBounds(180, 310, 20, 40);

      griduser66.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser66.setText("0");
      SudokuGame.add(griduser66);
      griduser66.setBounds(260, 310, 20, 40);

      griduser67.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser67.setText("0");
      SudokuGame.add(griduser67);
      griduser67.setBounds(300, 310, 20, 40);

      griduser68.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser68.setText("0");
      SudokuGame.add(griduser68);
      griduser68.setBounds(340, 310, 20, 40);

      griduser69.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser69.setText("0");
      SudokuGame.add(griduser69);
      griduser69.setBounds(380, 310, 20, 40);

      griduser70.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser70.setText("0");
      SudokuGame.add(griduser70);
      griduser70.setBounds(420, 310, 20, 40);

      griduser71.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser71.setText("0");
      SudokuGame.add(griduser71);
      griduser71.setBounds(460, 310, 20, 40);

      griduser73.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser73.setText("0");
      SudokuGame.add(griduser73);
      griduser73.setBounds(180, 350, 20, 29);

      griduser74.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser74.setText("0");
      SudokuGame.add(griduser74);
      griduser74.setBounds(220, 350, 20, 30);

      griduser76.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser76.setText("0");
      SudokuGame.add(griduser76);
      griduser76.setBounds(300, 350, 20, 30);

      griduser78.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser78.setText("0");
      SudokuGame.add(griduser78);
      griduser78.setBounds(420, 350, 20, 30);

      griduser79.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
      griduser79.setText("0");
      SudokuGame.add(griduser79);
      griduser79.setBounds(380, 350, 20, 30);

      backgroundGrid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/grid.jpg"))); // NOI18N
      backgroundGrid.setText("2");
      backgroundGrid.setAlignmentY(0.0F);
      backgroundGrid.setMaximumSize(new java.awt.Dimension(359, 359));
      backgroundGrid.setMinimumSize(new java.awt.Dimension(359, 359));
      backgroundGrid.setPreferredSize(new java.awt.Dimension(359, 359));
      SudokuGame.add(backgroundGrid);
      backgroundGrid.setBounds(126, 28, 359, 359);

      userbutton1.setText("jButton1");
      userbutton1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton1ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton1);
      userbutton1.setBounds(170, 30, 30, 40);

      userbutton2.setText("jButton1");
      userbutton2.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton2ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton2);
      userbutton2.setBounds(210, 30, 30, 40);

      userbutton4.setText("jButton1");
      userbutton4.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton4ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton4);
      userbutton4.setBounds(290, 30, 30, 40);

      userbutton6.setText("jButton1");
      userbutton6.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton6ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton6);
      userbutton6.setBounds(370, 30, 30, 40);

      userbutton7.setText("jButton1");
      userbutton7.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton7ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton7);
      userbutton7.setBounds(410, 30, 30, 40);

      userbutton9.setText("jButton1");
      userbutton9.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton9ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton9);
      userbutton9.setBounds(130, 70, 30, 40);

      userbutton10.setText("jButton1");
      userbutton10.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton10ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton10);
      userbutton10.setBounds(170, 70, 30, 40);

      userbutton11.setText("jButton1");
      userbutton11.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton11ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton11);
      userbutton11.setBounds(210, 70, 30, 40);

      userbutton12.setText("jButton1");
      userbutton12.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton12ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton12);
      userbutton12.setBounds(250, 70, 30, 40);

      userbutton13.setText("jButton1");
      userbutton13.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton13ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton13);
      userbutton13.setBounds(290, 70, 30, 40);

      userbutton14.setText("jButton1");
      userbutton14.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton14ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton14);
      userbutton14.setBounds(330, 70, 30, 40);

      userbutton16.setText("jButton1");
      userbutton16.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton16ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton16);
      userbutton16.setBounds(410, 70, 30, 40);

      userbutton17.setText("jButton1");
      userbutton17.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton17ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton17);
      userbutton17.setBounds(450, 70, 30, 40);

      userbutton18.setText("jButton1");
      userbutton18.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton18ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton18);
      userbutton18.setBounds(130, 110, 30, 40);

      userbutton20.setText("jButton1");
      userbutton20.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton20ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton20);
      userbutton20.setBounds(210, 110, 30, 40);

      userbutton21.setText("jButton1");
      userbutton21.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton21ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton21);
      userbutton21.setBounds(250, 110, 30, 40);

      userbutton22.setText("jButton1");
      userbutton22.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton22ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton22);
      userbutton22.setBounds(290, 110, 30, 40);

      userbutton23.setText("jButton1");
      userbutton23.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton23ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton23);
      userbutton23.setBounds(330, 110, 30, 40);

      userbutton26.setText("jButton1");
      userbutton26.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton26ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton26);
      userbutton26.setBounds(450, 110, 30, 40);

      userbutton28.setText("jButton1");
      userbutton28.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton28ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton28);
      userbutton28.setBounds(170, 150, 30, 40);

      userbutton30.setText("jButton1");
      userbutton30.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton30ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton30);
      userbutton30.setBounds(250, 150, 30, 40);

      userbutton32.setText("jButton1");
      userbutton32.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton32ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton32);
      userbutton32.setBounds(330, 150, 30, 40);

      userbutton35.setText("jButton1");
      userbutton35.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton35ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton35);
      userbutton35.setBounds(450, 150, 30, 40);

      userbutton36.setText("jButton1");
      userbutton36.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton36ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton36);
      userbutton36.setBounds(130, 190, 30, 40);

      userbutton37.setText("jButton1");
      userbutton37.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton37ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton37);
      userbutton37.setBounds(170, 190, 30, 40);

      userbutton38.setText("jButton1");
      userbutton38.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton38ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton38);
      userbutton38.setBounds(210, 190, 30, 40);

      userbutton39.setText("jButton1");
      userbutton39.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton39ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton39);
      userbutton39.setBounds(250, 190, 30, 40);

      userbutton41.setText("jButton1");
      userbutton41.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton41ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton41);
      userbutton41.setBounds(330, 190, 30, 40);

      userbutton42.setText("jButton1");
      userbutton42.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton42ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton42);
      userbutton42.setBounds(370, 190, 30, 40);

      userbutton43.setText("jButton1");
      userbutton43.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton43ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton43);
      userbutton43.setBounds(410, 190, 30, 40);

      userbutton44.setText("jButton1");
      userbutton44.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton44ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton44);
      userbutton44.setBounds(450, 190, 30, 40);

      userbutton45.setText("jButton1");
      userbutton45.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton45ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton45);
      userbutton45.setBounds(130, 230, 30, 40);

      userbutton48.setText("jButton1");
      userbutton48.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton48ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton48);
      userbutton48.setBounds(250, 230, 30, 40);

      userbutton50.setText("jButton1");
      userbutton50.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton50ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton50);
      userbutton50.setBounds(330, 230, 30, 40);

      userbutton52.setText("jButton1");
      userbutton52.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton52ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton52);
      userbutton52.setBounds(410, 230, 30, 40);

      userbutton54.setText("jButton1");
      userbutton54.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton54ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton54);
      userbutton54.setBounds(130, 270, 30, 40);

      userbutton57.setText("jButton1");
      userbutton57.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton57ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton57);
      userbutton57.setBounds(250, 270, 30, 40);

      userbutton58.setText("jButton1");
      userbutton58.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton58ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton58);
      userbutton58.setBounds(290, 270, 30, 40);

      userbutton59.setText("jButton1");
      userbutton59.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton59ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton59);
      userbutton59.setBounds(330, 270, 30, 40);

      userbutton60.setText("jButton1");
      userbutton60.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton60ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton60);
      userbutton60.setBounds(370, 270, 30, 40);

      userbutton62.setText("jButton1");
      userbutton62.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton62ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton62);
      userbutton62.setBounds(450, 270, 30, 40);

      userbutton63.setText("jButton1");
      userbutton63.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton63ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton63);
      userbutton63.setBounds(130, 310, 30, 40);

      userbutton64.setText("jButton1");
      userbutton64.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton64ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton64);
      userbutton64.setBounds(170, 310, 30, 40);

      userbutton66.setText("jButton1");
      userbutton66.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton66ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton66);
      userbutton66.setBounds(250, 310, 30, 40);

      userbutton67.setText("jButton1");
      userbutton67.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton67ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton67);
      userbutton67.setBounds(290, 310, 30, 40);

      userbutton68.setText("jButton1");
      userbutton68.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton68ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton68);
      userbutton68.setBounds(330, 310, 30, 40);

      userbutton69.setText("jButton1");
      userbutton69.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton69ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton69);
      userbutton69.setBounds(370, 310, 30, 40);

      userbutton70.setText("jButton1");
      userbutton70.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton70ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton70);
      userbutton70.setBounds(410, 310, 30, 40);

      userbutton71.setText("jButton1");
      userbutton71.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton71ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton71);
      userbutton71.setBounds(450, 310, 30, 40);

      userbutton73.setText("jButton1");
      userbutton73.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton73ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton73);
      userbutton73.setBounds(170, 350, 30, 30);

      userbutton74.setText("jButton1");
      userbutton74.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton74ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton74);
      userbutton74.setBounds(210, 350, 30, 30);

      userbutton76.setText("jButton1");
      userbutton76.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton76ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton76);
      userbutton76.setBounds(290, 350, 30, 30);

      userbutton78.setText("jButton1");
      userbutton78.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton78ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton78);
      userbutton78.setBounds(370, 350, 30, 30);

      userbutton79.setText("jButton1");
      userbutton79.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            userbutton79ActionPerformed(evt);
         }
      });
      SudokuGame.add(userbutton79);
      userbutton79.setBounds(410, 350, 30, 30);

      mainPanel.add(SudokuGame, "sudokuCard");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      );

      pack();
      setLocationRelativeTo(null);
   }// </editor-fold>//GEN-END:initComponents

      /**
     * method:PlayButtonActionPerformed
     * purpose:The methods does all the actions for the play button that calls the 
     * begin play method and opens the play card.
     */
   private void PlayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayButtonActionPerformed
      // TODO add your handling code here:
      //Play
      beginPlay();
      resetSudokuBoard();
      popupError.setVisible(false);
      CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "playCard");
   }//GEN-LAST:event_PlayButtonActionPerformed

     /**
     * method:HighScoresButtonActionPerformed
     * purpose:The methods does all the actions for the High score button that opens the High score play card.
     */
   private void HighScoresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HighScoresButtonActionPerformed
      // TODO add your handling code here:
      //High scores - using pieces from my methods above to quickly grab highscores txt file
      File daHighScores = new File("highscores.txt");
      //debug
      System.out.println("highscores.txt exists? "+daHighScores.exists());
      if(!(daHighScores.exists()))
         try {
            hsCreateFile();
      } catch (FileNotFoundException ex) {
         Logger.getLogger(QuarterProject245.class.getName()).log(Level.SEVERE, null, ex);
      }
      
      //quickly update high scores page with whatever is in highscores text file
      FileReader readHighScores;
       try {
          readHighScores = new FileReader(daHighScores);
          BufferedReader scanHS = new BufferedReader(readHighScores);
          highscore1.setText(scanHS.readLine());
          highscore2.setText(scanHS.readLine());
          highscore3.setText(scanHS.readLine());
          highscore4.setText(scanHS.readLine());
          
       } catch (FileNotFoundException ex) {
          Logger.getLogger(QuarterProject245.class.getName()).log(Level.SEVERE, null, ex);
       } catch (IOException ex) {
          Logger.getLogger(QuarterProject245.class.getName()).log(Level.SEVERE, null, ex);
       }
      CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "highscoresCard");
   }//GEN-LAST:event_HighScoresButtonActionPerformed
   
   /**
     * method:CreditsButtonActionPerformed
     * purpose:The methods does all the actions for the credit button that opens the credit play card.
     */
   private void CreditsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreditsButtonActionPerformed
      // TODO add your handling code here:
      // Credits
      // Displays panel over main menu
      CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "creditsCard");
   }//GEN-LAST:event_CreditsButtonActionPerformed

   /**
     * method:backButton0ActionPerformed 
     * purpose:The methods does all the actions for the all the back button that takes the user back
     *  to the main menu play card.
     */
   private void backButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton0ActionPerformed
      // TODO add your handling code here:
      CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "mainmenuCard");
   }//GEN-LAST:event_backButton0ActionPerformed

     /**
     * method:backButton1ActionPerformed 
     * purpose:The methods does all the actions for the all the back button that takes the user back
     *  to the main menu play card.
     */
   private void backButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton1ActionPerformed
      // TODO add your handling code here:
      CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "mainmenuCard");
   }//GEN-LAST:event_backButton1ActionPerformed
   
   /**
    * 
    * Method name: checkIfUserHighScored
    * Method purpose: Checks to see if the user high scored.
    * Returns a false if they didn't, true if they did.
    */
   public boolean checkIfUserHighScored(int userScore) throws FileNotFoundException, IOException {
      File daHighScores = new File("highscores.txt");
      //debug
      System.out.println("highscores.txt exists? "+daHighScores.exists());
      if(!(daHighScores.exists()))
         hsCreateFile();
      
      //Scan file for the scores and store in array
      int[] theScores = new int[4];
      //Scan file for the names and store in array
      String[] theNames = new String[4];
      //create a counter for the arrays
      int theCounter = 0;
      
      //set up the ability to read each line in the high scores
      FileReader readHighScores = new FileReader(daHighScores);
      BufferedReader scanHS = new BufferedReader(readHighScores);
      //read in the name of the person first through readNextLine check
      String readNextLine;
      
      //scans each line and takes the information it needs per line
      //(Name first, skips dots, score last)
      while((readNextLine = scanHS.readLine()) != null) {
         //first three characters of line are read
         theNames[theCounter] = readNextLine.substring(0, Math.min(readNextLine.length(), 3));
         
         //print it (debug)
         //System.out.println(""+theNames[theCounter]);
         
         //last three characters of line are read (after the last space)
         theScores[theCounter] = Integer.parseInt(readNextLine.substring(readNextLine.lastIndexOf(' ') + 1));
         
         //print it (debug)
         //System.out.println(""+theScores[theCounter]);
         
         theCounter++;
      }
      
      //show the results before writing to file (debug)
      System.out.println("Names old: " + Arrays.toString(theNames));
      System.out.println("Scores old: " + Arrays.toString(theScores));
      
      if(userScore <= theScores[3])
         return false; //user did not high score; lower than lowest
      else
         return true; //user did high score, higher than lowest
   }
   
   /**
    * 
    * Method name: updateHighScores
    * Method purpose: Updates high scores if user passed in has a good enough score.
    * A new high score file will be generated if one does not already exist.
    * Returns a string of the file's contents, so the jLabel may be updated.
    */
   public static String updateHighScores(String userName, int userScore) throws FileNotFoundException, IOException {
      //for reading the highscores file
      File daHighScores = new File("highscores.txt");
      //debug
      System.out.println("highscores.txt exists? "+daHighScores.exists());
      if(!(daHighScores.exists()))
         hsCreateFile();
      
      //pass in the user's name and score
      int passedInVariable = userScore;
      String passedInName = userName;
      
      //Scan file for the scores and store in array
      int[] theScores = new int[4];
      //Scan file for the names and store in array
      String[] theNames = new String[4];
      //create a counter for the arrays
      int theCounter = 0;
      //set up the ability to read each line in the high scores
      FileReader readHighScores = new FileReader(daHighScores);
      BufferedReader scanHS = new BufferedReader(readHighScores);
      //read in the name of the person first through readNextLine check
      String readNextLine;
      
      //scans each line and takes the information it needs per line
      //(Name first, skips dots, score last)
      while((readNextLine = scanHS.readLine()) != null) {
         //first three characters of line are read
         theNames[theCounter] = readNextLine.substring(0, Math.min(readNextLine.length(), 3));
         
         //print it (debug)
         //System.out.println(""+theNames[theCounter]);
         
         //last three characters of line are read (after the last space)
         theScores[theCounter] = Integer.parseInt(readNextLine.substring(readNextLine.lastIndexOf(' ') + 1));
         
         //print it (debug)
         //System.out.println(""+theScores[theCounter]);
         
         theCounter++;
      }
      
      //show the results before writing to file (debug)
      System.out.println("Names old: " + Arrays.toString(theNames));
      System.out.println("Scores old: " + Arrays.toString(theScores));
      
      //update scores with user's score if they got a high score
      //accomplished through retrieving the index that they should overwrite
      theCounter = indexUserRankedInto(theScores, passedInVariable);
      
      //update the scores if the user beat one
      if(theCounter != -1) {
         //store old scores so they aren't overwritten
         String oldName = theNames[theCounter];
         int oldScore = theScores[theCounter];
         //update with new scores;
         theScores[theCounter] = passedInVariable;
         theNames[theCounter] = passedInName;
         //update counter to begin pushback
         theCounter++;
         //push back all high scores if needed
         for(int i = theCounter; i < theScores.length; i++) {
            //if able to push back, then push back scores
            if((i+1) < theScores.length) {
               String pushbackName = theNames[i];
               int pushbackScore = theScores[i];
               theNames[i] = oldName;
               theScores[i] = oldScore;
               oldName = pushbackName;
               oldScore = pushbackScore;
            }
         }
         //at end of array, update the last index with prev. index,
         //which will consequently remove the lowest score
         theNames[theNames.length - 1] = oldName;
         theScores[theScores.length - 1] = oldScore;
      }
      
      //weird case where all high scores are equal,
      //but the last one is zero,
      //and your score = the other scores,
      //so you have to be put on the last score:
      if(theCounter == 4) {
         if(theScores[theScores.length - 1] < passedInVariable) {
            theNames[theNames.length - 1] = passedInName;
            theScores[theScores.length - 1] = passedInVariable;
         }
      }
      
      //show the results after writing to file (debug)
      System.out.println("Names updated: " + Arrays.toString(theNames));
      System.out.println("Scores updated: " + Arrays.toString(theScores));
      
      //update the file
      hsModifyFile(theScores, theNames);
      
      //turn the file into a string and print it (debug for jlabel updating)
      String highscoresfile = new Scanner(new File("highscores.txt")).useDelimiter("\\Z").next();
      System.out.println("High scores file contents: \n"+highscoresfile);
      return highscoresfile;
   }
   
   /**
    * 
    * Method name: hsCreateFile
    * Method purpose: Creates high scores file if one does not exist
    * 
    */
   
   public static void hsCreateFile() throws FileNotFoundException {
      try (PrintWriter addHighScores = new PrintWriter("highscores.txt")) {
         addHighScores.println("ABC ... 0");
         addHighScores.println("ABC ... 0");
         addHighScores.println("ABC ... 0");
         addHighScores.println("ABC ... 0");
      }
      catch(FileNotFoundException e) {
         e.getMessage();
      }
   }

   /**
    * 
    * Method name: hsModifyFile
    * Method purpose: Modifies the high scores by updating it with any new changes.
    * This is accomplished through simply posting the array data,
    * which was either untouched (user did not high score),'
    * or has an index updated (user did get a high score).
    * 
    */
   
   public static void hsModifyFile(int[] scores, String[] names) throws FileNotFoundException {
      try (PrintWriter addHighScores = new PrintWriter("highscores.txt")) {
         for(int i = 0; i < scores.length; i++)
            addHighScores.println(""+names[i]+" ... "+scores[i]+"");
      }
      catch(FileNotFoundException e) {
         e.getMessage();
      }
   }
   
   /**
    * 
    * Method name: indexUserRankedInto
    * Method purpose: Once scores are stored, see if user's high score is better than the others.
    * If so, update it and make sure it doesn't overwrite the lower scores.
    * If not, return a -1 to notify that the user didn't get a high score.
    * 
    */
   
   public static int indexUserRankedInto(int[] s, int userScore) {
      boolean updatedScore = false;
      for(int i = 0; i < s.length; i++) {
         if(updatedScore == false) {
            if(s[i] < userScore) {
               //returns index of line that user got a high score on (0-3)
               return i;
            }
         }
      }
      //returns -1 if nothing updated
      return -1;
   }
   
   /**
    * 
    * Method name: resetSudokuBoard
    * Method purpose: Resets the user's inputs to be blank.
    * 
    */
   public static void resetSudokuBoard() {
      griduser1.setText("");
      griduser2.setText("");
      griduser4.setText("");
      griduser6.setText("");
      griduser7.setText("");
      griduser9.setText("");
      griduser10.setText("");
      griduser11.setText("");
      griduser12.setText("");
      griduser13.setText("");
      griduser14.setText("");
      griduser16.setText("");
      griduser17.setText("");
      griduser18.setText("");
      griduser20.setText("");
      griduser21.setText("");
      griduser22.setText("");
      griduser23.setText("");
      griduser26.setText("");
      griduser28.setText("");
      griduser30.setText("");
      griduser32.setText("");
      griduser35.setText("");
      griduser36.setText("");
      griduser37.setText("");
      griduser38.setText("");
      griduser39.setText("");
      griduser41.setText("");
      griduser42.setText("");
      griduser43.setText("");
      griduser44.setText("");
      griduser45.setText("");
      griduser48.setText("");
      griduser50.setText("");
      griduser52.setText("");
      griduser54.setText("");
      griduser57.setText("");
      griduser58.setText("");
      griduser59.setText("");
      griduser60.setText("");
      griduser62.setText("");
      griduser63.setText("");
      griduser64.setText("");
      griduser66.setText("");
      griduser67.setText("");
      griduser68.setText("");
      griduser69.setText("");
      griduser70.setText("");
      griduser71.setText("");
      griduser73.setText("");
      griduser74.setText("");
      griduser76.setText("");
      griduser78.setText("");
      griduser79.setText("");
   }
   
   /**
    * 
    * Method name: updateSudokuBoard
    * Method purpose: Based on the area they click on the board,
    * update the board in that area with the user's input.
    * 
    */
   public static void updateSudokuBoard(int boardIndex, String userInput) {
      switch(boardIndex) {
         case 1:
            griduser1.setText(userInput);
            break;
         case 2:
            griduser2.setText(userInput);
            break;
         case 4:
            griduser4.setText(userInput);
            break;
         case 6:
            griduser6.setText(userInput);
            break;
         case 7:
            griduser7.setText(userInput);
            break;
         case 9:
            griduser9.setText(userInput);
            break;
         case 10:
            griduser10.setText(userInput);
            break;
         case 11:
            griduser11.setText(userInput);
            break;
         case 12:
            griduser12.setText(userInput);
            break;
         case 13:
            griduser13.setText(userInput);
            break;
         case 14:
            griduser14.setText(userInput);
            break;
         case 16:
            griduser16.setText(userInput);
            break;
         case 17:
            griduser17.setText(userInput);
            break;
         case 18:
            griduser18.setText(userInput);
            break;
         case 20:
            griduser20.setText(userInput);
            break;
         case 21:
            griduser21.setText(userInput);
            break;
         case 22:
            griduser22.setText(userInput);
            break;
         case 23:
            griduser23.setText(userInput);
            break;
         case 26:
            griduser26.setText(userInput);
            break;
         case 28:
            griduser28.setText(userInput);
            break;
         case 30:
            griduser30.setText(userInput);
            break;
         case 32:
            griduser32.setText(userInput);
            break;
         case 35:
            griduser35.setText(userInput);
            break;
         case 36:
            griduser36.setText(userInput);
            break;
         case 37:
            griduser37.setText(userInput);
            break;
         case 38:
            griduser38.setText(userInput);
            break;
         case 39:
            griduser39.setText(userInput);
            break;
         case 41:
            griduser41.setText(userInput);
            break;
         case 42:
            griduser42.setText(userInput);
            break;
         case 43:
            griduser43.setText(userInput);
            break;
         case 44:
            griduser44.setText(userInput);
            break;
         case 45:
            griduser45.setText(userInput);
            break;
         case 48:
            griduser48.setText(userInput);
            break;
         case 50:
            griduser50.setText(userInput);
            break;
         case 52:
            griduser52.setText(userInput);
            break;
         case 54:
            griduser54.setText(userInput);
            break;
         case 57:
            griduser57.setText(userInput);
            break;
         case 58:
            griduser58.setText(userInput);
            break;
         case 59:
            griduser59.setText(userInput);
            break;
         case 60:
            griduser60.setText(userInput);
            break;
         case 62:
            griduser62.setText(userInput);
            break;
         case 63:
            griduser63.setText(userInput);
            break;
         case 64:
            griduser64.setText(userInput);
            break;
         case 66:
            griduser66.setText(userInput);
            break;
         case 67:
            griduser67.setText(userInput);
            break;
         case 68:
            griduser68.setText(userInput);
            break;
         case 69:
            griduser69.setText(userInput);
            break;
         case 70:
            griduser70.setText(userInput);
            break;
         case 71:
            griduser71.setText(userInput);
            break;
         case 73:
            griduser73.setText(userInput);
            break;
         case 74:
            griduser74.setText(userInput);
            break;
         case 76:
            griduser76.setText(userInput);
            break;
         case 78:
            griduser78.setText(userInput);
            break;
         case 79:
            griduser79.setText(userInput);
            break;
      }
   }
   
   /**
     * method:bTMButtonActionPerformed 
     * purpose:The methods does all the actions for the all the end hangman button that takes the user back
     *  to the main menu play card and resets everything needed to play the game again.
     */
    private void bTMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTMButtonActionPerformed
        // TODO add your handling code here:
        //Troy - adding in high scores check
        
         File daHighScores = new File("highscores.txt");
        //debug
        System.out.println("highscores.txt exists? "+daHighScores.exists());
        if(!(daHighScores.exists()))
         try {
            hsCreateFile();
        } catch (FileNotFoundException ex) {
           Logger.getLogger(QuarterProject245.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       //check which card displays here
            userEndScore = score;
            try {
               boolean didUserHighScore = checkIfUserHighScored(score);
               
               resetButtons();
               if(didUserHighScore) {
                     CardLayout card = (CardLayout)mainPanel.getLayout();
                     card.show(mainPanel, "setCard");
                  }
               else {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "mainmenuCard");     
               }
            } catch (IOException ex) {
               Logger.getLogger(QuarterProject245.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_bTMButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void rButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rButtonActionPerformed
        rStatus = false;
        gameMoves();
        rButton.setEnabled(false);
    }//GEN-LAST:event_rButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void nButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nButtonActionPerformed
        nStatus = false;
        gameMoves();
        nButton.setEnabled(false);
    }//GEN-LAST:event_nButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void qButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qButtonActionPerformed
        qStatus = true;
        gameMoves();
        qButton.setEnabled(false);
    }//GEN-LAST:event_qButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void zButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zButtonActionPerformed
        zStatus = true;
        gameMoves();
        zButton.setEnabled(false);
    }//GEN-LAST:event_zButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void yButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yButtonActionPerformed
        yStatus = false;
        gameMoves();
        yButton.setEnabled(false);
    }//GEN-LAST:event_yButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void xButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xButtonActionPerformed
        xStatus = true;
        gameMoves();
        xButton.setEnabled(false);
    }//GEN-LAST:event_xButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void pButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pButtonActionPerformed
        pStatus = false;
        gameMoves();
        pButton.setEnabled(false);
    }//GEN-LAST:event_pButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void wButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wButtonActionPerformed
        wStatus = true;
        gameMoves();
        wButton.setEnabled(false);
    }//GEN-LAST:event_wButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void oButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oButtonActionPerformed
        oStatus = true;
        gameMoves();
        oButton.setEnabled(false);
    }//GEN-LAST:event_oButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void vButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vButtonActionPerformed
        vStatus = true;
        gameMoves();
        vButton.setEnabled(false);
    }//GEN-LAST:event_vButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void uButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uButtonActionPerformed
        uStatus = false;
        gameMoves();
        uButton.setEnabled(false);
    }//GEN-LAST:event_uButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void tButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tButtonActionPerformed
        tStatus = false;
        gameMoves();
        tButton.setEnabled(false);
    }//GEN-LAST:event_tButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void sButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sButtonActionPerformed
        sStatus = false;
        gameMoves();
        sButton.setEnabled(false);
    }//GEN-LAST:event_sButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void mButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mButtonActionPerformed
        mStatus = false;
        gameMoves();
        mButton.setEnabled(false);
    }//GEN-LAST:event_mButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void LButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LButtonActionPerformed
        lStatus = false;
        gameMoves();
        LButton.setEnabled(false);
    }//GEN-LAST:event_LButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void kButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButtonActionPerformed
        kStatus = true;
        gameMoves();
        kButton.setEnabled(false);
    }//GEN-LAST:event_kButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActionPerformed
        jStatus = true;
        gameMoves();
        jButton.setEnabled(false);
    }//GEN-LAST:event_jButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void iButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iButtonActionPerformed
        iStatus = false;
        gameMoves();
        iButton.setEnabled(false);
    }//GEN-LAST:event_iButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void hButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hButtonActionPerformed
        hStatus = false;
        gameMoves();
        hButton.setEnabled(false);
    }//GEN-LAST:event_hButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void gButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gButtonActionPerformed
        gStatus = false;
        gameMoves();
        gButton.setEnabled(false);
    }//GEN-LAST:event_gButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void fButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fButtonActionPerformed
        fStatus = true;
        gameMoves();
        fButton.setEnabled(false);
    }//GEN-LAST:event_fButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void eButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eButtonActionPerformed
        eStatus = false;
        gameMoves();
        eButton.setEnabled(false);
    }//GEN-LAST:event_eButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void dButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dButtonActionPerformed
        dStatus = true;
        gameMoves();
        dButton.setEnabled(false);
    }//GEN-LAST:event_dButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void cButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButtonActionPerformed
        cStatus = false;
        gameMoves();
        cButton.setEnabled(false);
    }//GEN-LAST:event_cButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void bButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bButtonActionPerformed
        bStatus = false;
        gameMoves();
        bButton.setEnabled(false);
    }//GEN-LAST:event_bButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void aButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aButtonActionPerformed
        aStatus = false;
        gameMoves();
        aButton.setEnabled(false);
    }//GEN-LAST:event_aButtonActionPerformed

    /**
     * method: skipButtonActionPerformed
     * purpose:The method skips the game by going to the end card and sets the score to zero.
     */
    private void skipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipButtonActionPerformed
        score = 0;
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "PACgameCard");
    }//GEN-LAST:event_skipButtonActionPerformed
    
    /**
     * method: userNameActionPerformed
     * purpose: This is used to take in the user's input (their initials).
     * No code is required in here, since the text is saved into the object,
     * and then accessed via method calls on the input object,
     * which is then used to write their name to the file.
     * However, this is still needed to take in input.
     */
   private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_userNameActionPerformed

    /**
     * method: doneButtonActionPerformed
     * Purpose: When this button is activated, it will check the user's input
     * From the text field userName (see method above),
     * check to make sure it fits the initial requirements,
     * and then will write the high scores from the file to the high score page.
     * Everything is then reset, and then the main menu is accessed.
     */
   private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
      // TODO add your handling code here:
     String uN = userName.getText();
      //Initials only; else default setting (ABC)
      if(uN.length() != 3)
         uN = "ABC";
       try {
          String newScores = updateHighScores(uN, userEndScore);
          System.out.println("The string (Debug): \n"+newScores);
          //scan through string
          Scanner scanny = new Scanner(newScores);
          highscore1.setText(scanny.nextLine());
          highscore2.setText(scanny.nextLine());
          highscore3.setText(scanny.nextLine());
          highscore4.setText(scanny.nextLine());       
       } catch (IOException ex) {
          Logger.getLogger(QuarterProject245.class.getName()).log(Level.SEVERE, null, ex);
       }
       
       //reset since it was skipped, then main menu
       userEndScore = 0;
       resetButtons();
       CardLayout card = (CardLayout)mainPanel.getLayout();
       card.show(mainPanel, "mainmenuCard");
   }//GEN-LAST:event_doneButtonActionPerformed

   /**
     * method:jButtonPurpleActionPerformed
     * Purpose:the method just calls the PACGmae method and gives the value associated with the color.
     */ 
    private void jButtonPurpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPurpleActionPerformed
         PACGmae(1);
    }//GEN-LAST:event_jButtonPurpleActionPerformed

    /**
     * method:jButtonRedActionPerformed
     * Purpose:the method just calls the PACGmae method and gives the value associated with the color.
     */ 
    private void jButtonRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRedActionPerformed
         PACGmae(3);
    }//GEN-LAST:event_jButtonRedActionPerformed

    /**
     * method:jButtonYellowActionPerformed
     * Purpose:the method just calls the PACGmae method and gives the value associated with the color.
     */
    private void jButtonYellowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonYellowActionPerformed
       PACGmae(2);
    }//GEN-LAST:event_jButtonYellowActionPerformed

    /**
     * method:jButtonGreenActionPerformed
     * Purpose:the method just calls the PACGmae method and gives the value associated with the color.
     */
    private void jButtonGreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGreenActionPerformed
         PACGmae(0);
    }//GEN-LAST:event_jButtonGreenActionPerformed

    /**
     * method:jButtonBlueActionPerformed
     * Purpose:the method just calls the PACGmae method and gives the value associated with the color.
     */
    private void jButtonBlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBlueActionPerformed
        PACGmae(4);
    }//GEN-LAST:event_jButtonBlueActionPerformed

   private void sudokuQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sudokuQuitActionPerformed
      // TODO add your handling code here:
      
      //reset everything, this also enables this very button to work.
      //since I have to do this to get the button to work,
      //I need to follow the same logic I did in End game screen
      //and set user's score to another variable so it's not reset
      //and then set it back. Investigating later to see why
      userEndScore = score;
      resetButtons();
      score = userEndScore;
      CardLayout gameEnding = (CardLayout)mainPanel.getLayout();
      gameEnding.show(mainPanel, "endCard");
      System.out.println("Does the quit button work on sudoku?");
   }//GEN-LAST:event_sudokuQuitActionPerformed

   private void userbutton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton1ActionPerformed
      // TODO add your handling code here:
      currentButton = 1;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton1ActionPerformed

   private void userbutton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton2ActionPerformed
      // TODO add your handling code here:
      currentButton = 2;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton2ActionPerformed

   private void userbutton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton11ActionPerformed
      // TODO add your handling code here:
      currentButton = 11;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton11ActionPerformed

   private void sudokuSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sudokuSubmitActionPerformed
      // TODO add your handling code here:
      
   }//GEN-LAST:event_sudokuSubmitActionPerformed

   private void userbutton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton10ActionPerformed
      // TODO add your handling code here:
      currentButton = 10;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton10ActionPerformed

   private void userbutton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton4ActionPerformed
      // TODO add your handling code here:
      currentButton = 4;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton4ActionPerformed

   private void userbutton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton6ActionPerformed
      // TODO add your handling code here:
      currentButton = 6;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton6ActionPerformed

   private void userbutton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton7ActionPerformed
      // TODO add your handling code here:
      currentButton = 7;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton7ActionPerformed

   private void userbutton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton12ActionPerformed
      // TODO add your handling code here:
      currentButton = 12;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton12ActionPerformed

   private void userbutton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton13ActionPerformed
      // TODO add your handling code here:
      currentButton = 13;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton13ActionPerformed

   private void userbutton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton14ActionPerformed
      // TODO add your handling code here:
      currentButton = 14;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton14ActionPerformed

   private void userbutton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton16ActionPerformed
      // TODO add your handling code here:
      currentButton = 16;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton16ActionPerformed

   private void userbutton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton17ActionPerformed
      // TODO add your handling code here:
      currentButton = 17;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton17ActionPerformed

   private void userbutton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton26ActionPerformed
      // TODO add your handling code here:
      currentButton = 26;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton26ActionPerformed

   private void userbutton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton18ActionPerformed
      // TODO add your handling code here:
      currentButton = 18;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton18ActionPerformed

   private void userbutton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton20ActionPerformed
      // TODO add your handling code here:
      currentButton = 20;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton20ActionPerformed

   private void userbutton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton36ActionPerformed
      // TODO add your handling code here:
      currentButton = 36;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton36ActionPerformed

   private void userbutton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton28ActionPerformed
      // TODO add your handling code here:
      currentButton = 28;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton28ActionPerformed

   private void userbutton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton37ActionPerformed
      // TODO add your handling code here:
      currentButton = 37;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton37ActionPerformed

   private void userbutton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton38ActionPerformed
      // TODO add your handling code here:
      currentButton = 38;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton38ActionPerformed

   private void userbutton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton21ActionPerformed
      // TODO add your handling code here:
      currentButton = 21;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton21ActionPerformed

   private void userbutton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton22ActionPerformed
      // TODO add your handling code here:
      currentButton = 22;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton22ActionPerformed

   private void userbutton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton23ActionPerformed
      // TODO add your handling code here:
      currentButton = 23;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton23ActionPerformed

   private void userbutton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton42ActionPerformed
      // TODO add your handling code here:
      currentButton = 42;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton42ActionPerformed

   private void userbutton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton30ActionPerformed
      // TODO add your handling code here:
      currentButton = 30;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton30ActionPerformed

   private void userbutton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton39ActionPerformed
      // TODO add your handling code here:
      currentButton = 39;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton39ActionPerformed

   private void userbutton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton32ActionPerformed
      // TODO add your handling code here:
      currentButton = 32;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton32ActionPerformed

   private void userbutton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton35ActionPerformed
      // TODO add your handling code here:
      currentButton = 35;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton35ActionPerformed

   private void userbutton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton41ActionPerformed
      // TODO add your handling code here:
      currentButton = 41;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton41ActionPerformed

   private void userbutton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton43ActionPerformed
      // TODO add your handling code here:
      currentButton = 43;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton43ActionPerformed

   private void userbutton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton44ActionPerformed
      // TODO add your handling code here:
      currentButton = 44;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton44ActionPerformed

   private void userbutton48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton48ActionPerformed
      // TODO add your handling code here:
      currentButton = 48;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton48ActionPerformed

   private void userbutton50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton50ActionPerformed
      // TODO add your handling code here:
      currentButton = 50;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton50ActionPerformed

   private void userbutton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton45ActionPerformed
      // TODO add your handling code here:
      currentButton = 45;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton45ActionPerformed

   private void userbutton52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton52ActionPerformed
      // TODO add your handling code here:
      currentButton = 52;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton52ActionPerformed

   private void userbutton54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton54ActionPerformed
      // TODO add your handling code here:
      currentButton = 54;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton54ActionPerformed

   private void userbutton63ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton63ActionPerformed
      // TODO add your handling code here:
      currentButton = 63;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton63ActionPerformed

   private void userbutton64ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton64ActionPerformed
      // TODO add your handling code here:
      currentButton = 64;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton64ActionPerformed

   private void userbutton73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton73ActionPerformed
      // TODO add your handling code here:
      currentButton = 73;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton73ActionPerformed

   private void userbutton57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton57ActionPerformed
      // TODO add your handling code here:
      currentButton = 57;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton57ActionPerformed

   private void userbutton58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton58ActionPerformed
      // TODO add your handling code here:
      currentButton = 58;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton58ActionPerformed

   private void userbutton59ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton59ActionPerformed
      // TODO add your handling code here:
      currentButton = 59;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton59ActionPerformed

   private void userbutton67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton67ActionPerformed
      // TODO add your handling code here:
      currentButton = 67;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton67ActionPerformed

   private void userbutton66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton66ActionPerformed
      // TODO add your handling code here:
      currentButton = 66;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton66ActionPerformed

   private void userbutton76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton76ActionPerformed
      // TODO add your handling code here:
      currentButton = 76;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton76ActionPerformed

   private void userbutton60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton60ActionPerformed
      // TODO add your handling code here:
      currentButton = 60;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton60ActionPerformed

   private void userbutton62ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton62ActionPerformed
      // TODO add your handling code here:
      currentButton = 62;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton62ActionPerformed

   private void userbutton68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton68ActionPerformed
      // TODO add your handling code here:
      currentButton = 68;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton68ActionPerformed

   private void userbutton69ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton69ActionPerformed
      // TODO add your handling code here:
      currentButton = 69;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton69ActionPerformed

   private void userbutton78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton78ActionPerformed
      // TODO add your handling code here:
      currentButton = 78;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton78ActionPerformed

   private void userbutton79ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton79ActionPerformed
      // TODO add your handling code here:
      currentButton = 79;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton79ActionPerformed

   private void userbutton70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton70ActionPerformed
      // TODO add your handling code here:
      currentButton = 70;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton70ActionPerformed

   private void userbutton71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton71ActionPerformed
      // TODO add your handling code here:
      currentButton = 71;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton71ActionPerformed

   private void userbutton74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton74ActionPerformed
      // TODO add your handling code here:
      currentButton = 74;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton74ActionPerformed

   private void userbutton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userbutton9ActionPerformed
      // TODO add your handling code here:
      currentButton = 9;
      popupUser.setLocationRelativeTo(null);
      popupUser.setVisible(true);
   }//GEN-LAST:event_userbutton9ActionPerformed

   private void popupOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupOkButtonActionPerformed
      // TODO add your handling code here:
      String usersInput = popupUserInput.getText();
      
      //user's input wrong, show error, do not continue
      if(!(usersInput.matches("^[+-]?\\d+$"))) {
         popupError.setText("ERROR: Input was not an integer. Try again.");
         popupError.setVisible(true);
         popupUserInput.setText("");
      }
      else {
         //String = int, convert String to int to check range
         int usersInputInt = Integer.parseInt(usersInput);
         //user's input not in range, show error, do not continue
         if(usersInputInt < 1 || usersInputInt > 9) {
            popupError.setText("ERROR: Input must be 1-9. Try again.");
            popupError.setVisible(true);
            popupUserInput.setText("");
         }
         //input is correct, update board, continue
         else {
            popupError.setVisible(false);
            updateSudokuBoard(currentButton, popupUserInput.getText());
            popupUser.setVisible(false);
            popupUserInput.setText("");
         }
      }
   }//GEN-LAST:event_popupOkButtonActionPerformed

   private void popupUserInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupUserInputActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_popupUserInputActionPerformed

   private void popupCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupCancelButtonActionPerformed
      // TODO add your handling code here:
      popupUser.setVisible(false);
      popupError.setVisible(false);
      popupUserInput.setText("");
   }//GEN-LAST:event_popupCancelButtonActionPerformed

   
   
    /**
     * method:resetButtons
     * purpose:The method resets all variables, buttons and images to play the game again.
     */
    public void resetButtons()
   {
       count = 0;
       wordCount = 0;
       score = 100;
       randNumber = 0;
       randNumForColor =0;
       countPAC =0;
       aButton.setEnabled(true);
       bButton.setEnabled(true);
       cButton.setEnabled(true); 
       dButton.setEnabled(true); 
       eButton.setEnabled(true); 
       fButton.setEnabled(true); 
       gButton.setEnabled(true); 
       hButton.setEnabled(true); 
       iButton.setEnabled(true); 
       jButton.setEnabled(true);
       kButton.setEnabled(true);
       LButton.setEnabled(true);
       mButton.setEnabled(true);
       nButton.setEnabled(true);
       oButton.setEnabled(true);
       pButton.setEnabled(true);
       qButton.setEnabled(true);
       rButton.setEnabled(true);
       sButton.setEnabled(true);
       tButton.setEnabled(true);
       uButton.setEnabled(true);
       vButton.setEnabled(true);
       wButton.setEnabled(true);
       xButton.setEnabled(true);
       yButton.setEnabled(true);
       zButton.setEnabled(true);
        ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter6.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter7.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                    jLabelLetter8.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
   }
    
     /**
     * method:resetStatus
     * purpose:The method resets the status of the buttons to walk through each letter.
     */
   public void resetStatus()
   {
         //sets values true
   aStatus = true;
   bStatus = true;
   cStatus = true;
   dStatus = true;
   eStatus = true;
   fStatus = true;
   gStatus = true;
   hStatus = true;
   iStatus = true;
   jStatus = true;
   kStatus = true;
   lStatus = true;
   mStatus = true;
   nStatus = true;
   oStatus = true;
   pStatus = true;
  qStatus = true;
   rStatus = true;
   sStatus = true;
   tStatus = true;
   uStatus = true;
   vStatus = true;
   wStatus = true;
   xStatus = true;
   yStatus = true;
  zStatus = true;
   }
   
     /**
     * method:beginPlay
     * purpose:The method sets the random number for the index and the word to a
     * variable and the color to another variable.
     */
   public void beginPlay()
   {
       Random rand = new Random();
       randNumber = rand.nextInt(A_SIZE);
       
       playWord = words[randNumber];
          System.out.println(playWord);
          colorDisplay = colors[randNumber];
          
          randNumForColor = rand.nextInt(A_SIZE);
          System.out.println(randNumForColor);
      
   }
   
    /**
     * method:gameMoves
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. It also paints the image of the letter that has action listeners to perform the task 
     * in real time.
     */
   public void gameMoves()
   {
       System.out.println(count);
      switch(randNumber)
             {
             case 0: //abstract
                 if (aStatus == false)
                 {
                     System.out.println("good");
                     wordCount +=2;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/A.png")));
                 jLabelLetter6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/A.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                     
                 }
                 else if (bStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                      ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/B.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (sStatus == false)
                 {
                     System.out.println("good");
                    ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/S.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (tStatus == false)
                 {
                     System.out.println("good");
                     wordCount+=2;
                      ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/T.png")));
                 jLabelLetter8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/T.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (rStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                      ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/R.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (cStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                      ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/C.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else
                 {
                      System.out.println("bad");
                      count++;
                      score = score - 10;
                 }
                 resetStatus();
                   break;
             case 1: //cemetery
                 if (cStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/C.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (eStatus == false)
                 {
                     System.out.println("good");
                     wordCount +=3;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/E.png")));
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/E.png")));
                 jLabelLetter6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/E.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (mStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/M.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (tStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/T.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (rStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/R.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (yStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Y.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else
                 {
                      System.out.println("bad");
                      count++;
                     score = score - 10;
                 }
                 resetStatus();
                   break;
             case 2: //nurse 
                 if (nStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/N.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (uStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/U.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (rStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/R.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (sStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/S.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (eStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/E.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else
                 {
                      System.out.println("bad");
                      count++;
                      score = score - 10;
                 }
                 resetStatus();
                   break;
             
             case 3://pharmacy
                 if (pStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/P.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (hStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/H.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (aStatus == false)
                 {
                     System.out.println("good");
                     wordCount +=2;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/A.png")));
                  jLabelLetter6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/A.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (rStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                          ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/R.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (mStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                          ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/M.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (cStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                            ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/C.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (yStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                            ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Y.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else
                 {
                      System.out.println("bad");
                      count++;
                      score = score - 10;
                 }
                 resetStatus();
                   break;   
            
             case 4://climbing
                 if (cStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                            ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/C.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (lStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                            ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/L.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (iStatus == false)
                 {
                     System.out.println("good");
                     wordCount+=2;
                            ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/I.png")));
                 jLabelLetter6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/I.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (mStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                             ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/M.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (bStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                             ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/B.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (nStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                             ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/N.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (gStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                             ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/G.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else
                 {
                      System.out.println("bad");
                      count++;
                      score = score - 10;
                 }
                 resetStatus();
                   break;
             }
       if (count == 6)
       {
        CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "PACgameCard");
        System.out.println("The score is :" + score);
       }
   }
   /**
     * method:PACGmae
     * Purpose:the method updates the score and makes sure that the color given
     * by the random number generator this function also calls resetPAC method 
     * and increments the countPAC variable to run the five rounds  .
     */
   public void PACGmae(int value)
   {
       switch(randNumForColor)
             {
             case 0://green
                 if(randNumForColor == value)
                 {
                     System.out.println("score +100");
                     score = score + 100;
                 }
                 else
                 {
                     System.out.println("not correct color");
                 }
                    break;
             case 1://purple
                  if(randNumForColor == value)
                 {
                     System.out.println("score +100");
                     score = score + 100;
                 }
                 else
                 {
                     System.out.println("not correct color");
                 }
                    break;  
             case 2://yellow 
                  if(randNumForColor == value)
                 {
                     System.out.println("score +100");
                     score = score + 100;
                 }
                 else
                 {
                     System.out.println("not correct color");
                 }
                    break;
              case 3://red
                   if(randNumForColor == value)
                 {
                     System.out.println("score +100");
                     score = score + 100;
                 }
                 else
                 {
                     System.out.println("not correct color");
                 }
                    break;
              case 4://blue 
                   if(randNumForColor == value)
                 {
                     System.out.println("score +100");
                     score = score + 100;
                 }
                 else
                 {
                     System.out.println("not correct color");
                 }
                    break;
              }
            countPAC++;
            resetPAC();
   }
   
   /**
     * method:resetPAC
     * Purpose:this method resets the color title that is displayed, resets the
     * color needed to win the round and changes the position of the circle buttons.
     */
   public void resetPAC()
   {
       Random rand = new Random();
       randNumber = rand.nextInt(A_SIZE);
          colorDisplay = colors[randNumber];
          
          randNumForColor = rand.nextInt(A_SIZE);
          System.out.println(randNumForColor);
          
          int boardRand = 0;
           
          
          ActionListener rPACGame = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
                    PointAndClickGame.setLayout(null);
                    int boardRand = rand.nextInt(13);
                 switch(boardRand)
             {
             case 0:
                 jButtonBlue.setLocation(446, 192);
                 jButtonRed.setLocation(20, 265);
                 jButtonGreen.setLocation(331, 50);
                 jButtonPurple.setLocation(172, 44);
                jButtonYellow.setLocation(45, 8);
                            break;
                        case 1:
                  jButtonBlue.setLocation(450,53 );
                 jButtonRed.setLocation(120, 13);
                 jButtonGreen.setLocation(7, 10);
                 jButtonPurple.setLocation(5, 199);
                jButtonYellow.setLocation(100, 226);
                            break;  
                    case 2:
                  jButtonBlue.setLocation(152,218 );
                 jButtonRed.setLocation(17, 58);
                 jButtonGreen.setLocation(407, 234);
                 jButtonPurple.setLocation(17, 231);
                jButtonYellow.setLocation(135, 52);
                 
                         break;
                    case 3:
                         jButtonBlue.setLocation(112,16 );
                 jButtonRed.setLocation(331, 55);
                 jButtonGreen.setLocation(413, 256);
                 jButtonPurple.setLocation(126, 169);
                jButtonYellow.setLocation(433, 127);
                  
                        break;
                    case 4:
                       jButtonBlue.setLocation(118,12 );
                 jButtonRed.setLocation(278, 116);
                 jButtonGreen.setLocation(202, 233);
                 jButtonPurple.setLocation(119, 211);
                jButtonYellow.setLocation(337, 46);
                  
                        break;
                case 5:
                   jButtonBlue.setLocation(117,195 );
                 jButtonRed.setLocation(426, 34);
                 jButtonGreen.setLocation(230, 15);
                 jButtonPurple.setLocation(328, 230);
                jButtonYellow.setLocation(338, 54);
                  
                        break;
                  case 6:
                       jButtonBlue.setLocation(211,23 );
                 jButtonRed.setLocation(225,262 );
                 jButtonGreen.setLocation(143,189 );
                 jButtonPurple.setLocation(355, 21);
                jButtonYellow.setLocation(110, 109);
      
                        break;
                        
                     case 7:
                       jButtonBlue.setLocation(41, 5);
                 jButtonRed.setLocation(331, 140);
                 jButtonGreen.setLocation(36, 147);
                 jButtonPurple.setLocation(198, 224);
                jButtonYellow.setLocation(200, 53);
      
                        break;
                    
                     case 8:
                       jButtonBlue.setLocation(405, 62);
                 jButtonRed.setLocation(416,158 );
                 jButtonGreen.setLocation(102,116 );
                 jButtonPurple.setLocation(11,68 );
                jButtonYellow.setLocation(249, 196);
      
                        break;
                        
                    case 9:
                       jButtonBlue.setLocation(231, 19);
                 jButtonRed.setLocation(428, 121);
                 jButtonGreen.setLocation(11, 114);
                 jButtonPurple.setLocation(12, 9);
                jButtonYellow.setLocation(276, 248);
      
                        break;
                        
                   case 10:
                       jButtonBlue.setLocation(79, 220);
                 jButtonRed.setLocation(404, 207);
                 jButtonGreen.setLocation(369, 37);
                 jButtonPurple.setLocation(216, 29);
                jButtonYellow.setLocation(122, 65);
      
                        break;
                        
                    case 11:
                       jButtonBlue.setLocation(314, 134);
                 jButtonRed.setLocation(270, 27);
                 jButtonGreen.setLocation(247, 258);
                 jButtonPurple.setLocation(433, 228);
                jButtonYellow.setLocation(85, 95);
      
                        break;
                        
                     case 12:
                       jButtonBlue.setLocation(403, 90);
                 jButtonRed.setLocation(19, 56);
                 jButtonGreen.setLocation(344, 218);
                 jButtonPurple.setLocation(341, 11);
                jButtonYellow.setLocation(36, 209);
      
                        break;
                        
                  case 13:
                       jButtonBlue.setLocation(35, 77);
                 jButtonRed.setLocation(229, 262);
                 jButtonGreen.setLocation(77, 212);
                 jButtonPurple.setLocation(405, 48);
                jButtonYellow.setLocation(313, 169);
      
                        break;
                    
                    } 
                 }
                 };
           Timer rPACTimer = new Timer(0, rPACGame);
                rPACTimer.setRepeats(false);
                rPACTimer.start();
            
        /*int l1x = rand.nextInt(PointAndClickGame.getWidth()-jButtonBlue.getWidth());
          int l1y = rand.nextInt(PointAndClickGame.getHeight()-jButtonBlue.getHeight());
          
          
           int l2x = rand.nextInt(PointAndClickGame.getWidth()-jButtonRed.getWidth()-20);
          int l2y = rand.nextInt(PointAndClickGame.getHeight()-jButtonRed.getHeight()-20);
            
            
            int l3x = rand.nextInt(PointAndClickGame.getWidth()-jButtonGreen.getWidth()-25);
          int l3y = rand.nextInt(PointAndClickGame.getHeight()-jButtonGreen.getHeight()-25);
     
          
          int l4x = rand.nextInt(PointAndClickGame.getWidth()-jButtonPurple.getWidth()-30);
          int l4y = rand.nextInt(PointAndClickGame.getHeight()-jButtonPurple.getHeight()-30);
            
            
            int l5x = rand.nextInt(PointAndClickGame.getWidth()-jButtonYellow.getWidth()-35);
          int l5y = rand.nextInt(PointAndClickGame.getHeight()-jButtonYellow.getHeight()-35);
          
         
        
                   ActionListener rPACGame = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
                 PointAndClickGame.setLayout(null);
                 jButtonBlue.setLocation(l1x, l1y);
                 jButtonRed.setLocation(l2x, l2y);
                 jButtonGreen.setLocation(l3x, l3y);
                 jButtonPurple.setLocation(l4x, l4y);
                jButtonYellow.setLocation(l5x, l5y);
                 }
                 };
                 

                Timer rPACTimer = new Timer(0, rPACGame);
                rPACTimer.setRepeats(false);
                rPACTimer.start();*/
   }
    /**
     * method:main
     * purpose: sets the thread to play the game and sets the board panels visible.
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuarterProject245.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuarterProject245.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuarterProject245.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuarterProject245.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuarterProject245().setVisible(true);
            }
        });
        
    }
    
    private int currentButton = 0;
    private int count = 0;
    private int wordCount = 0;
    private int score = 100; 
    private int randNumber = 0;
    private final int A_SIZE = 5;
    private String [] words = new String[A_SIZE];
    private String [] colors = new String [A_SIZE];
    private String playWord;
    private String colorDisplay;
    private int randNumForColor =0;
    private int countPAC =0;
    private int userEndScore = 0;
   
//status for game
   private boolean aStatus = true;
   private boolean bStatus = true;
   private boolean cStatus = true;
   private boolean dStatus = true;
   private boolean eStatus = true;
   private boolean fStatus = true;
   private boolean gStatus = true;
   private boolean hStatus = true;
   private boolean iStatus = true;
   private boolean jStatus = true;
   private boolean kStatus = true;
   private boolean lStatus = true;
   private boolean mStatus = true;
   private boolean nStatus = true;
   private boolean oStatus = true;
   private boolean pStatus = true;
  private boolean qStatus = true;
   private boolean rStatus = true;
   private boolean sStatus = true;
   private boolean tStatus = true;
   private boolean uStatus = true;
   private boolean vStatus = true;
   private boolean wStatus = true;
   private boolean xStatus = true;
   private boolean yStatus = true;
  private boolean zStatus = true;
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton CreditsButton;
   private javax.swing.JPanel CreditsMenu;
   private javax.swing.JPanel End;
   private javax.swing.JPanel HighScoreSet;
   private javax.swing.JButton HighScoresButton;
   private javax.swing.JPanel HighScoresMenu;
   private javax.swing.JButton LButton;
   private javax.swing.JPanel MainMenu;
   private javax.swing.JButton PlayButton;
   private javax.swing.JPanel PlayMenu;
   private javax.swing.JPanel PointAndClickGame;
   private javax.swing.JLabel ProjectTitle;
   private javax.swing.JPanel SplashPage;
   private javax.swing.JPanel SudokuGame;
   private javax.swing.JLabel SudokuTitle;
   private javax.swing.JLabel TeamLogo;
   private javax.swing.JLabel TeamName;
   private javax.swing.JButton aButton;
   private javax.swing.JButton bButton;
   private javax.swing.JButton bTMButton;
   private javax.swing.JButton backButton0;
   private javax.swing.JButton backButton1;
   private javax.swing.JLabel backgroundGrid;
   private javax.swing.JButton cButton;
   private javax.swing.JButton dButton;
   private javax.swing.JButton doneButton;
   private javax.swing.JButton eButton;
   private javax.swing.JButton fButton;
   private javax.swing.JButton gButton;
   private javax.swing.JLabel gridfield0;
   private javax.swing.JLabel gridfield15;
   private javax.swing.JLabel gridfield19;
   private javax.swing.JLabel gridfield24;
   private javax.swing.JLabel gridfield25;
   private javax.swing.JLabel gridfield27;
   private javax.swing.JLabel gridfield29;
   private javax.swing.JLabel gridfield3;
   private javax.swing.JLabel gridfield31;
   private javax.swing.JLabel gridfield33;
   private javax.swing.JLabel gridfield34;
   private javax.swing.JLabel gridfield40;
   private javax.swing.JLabel gridfield46;
   private javax.swing.JLabel gridfield47;
   private javax.swing.JLabel gridfield49;
   private javax.swing.JLabel gridfield5;
   private javax.swing.JLabel gridfield51;
   private javax.swing.JLabel gridfield53;
   private javax.swing.JLabel gridfield55;
   private javax.swing.JLabel gridfield56;
   private javax.swing.JLabel gridfield61;
   private javax.swing.JLabel gridfield65;
   private javax.swing.JLabel gridfield72;
   private javax.swing.JLabel gridfield75;
   private javax.swing.JLabel gridfield77;
   private javax.swing.JLabel gridfield8;
   private javax.swing.JLabel gridfield80;
   private static javax.swing.JLabel griduser1;
   private static javax.swing.JLabel griduser10;
   private static javax.swing.JLabel griduser11;
   private static javax.swing.JLabel griduser12;
   private static javax.swing.JLabel griduser13;
   private static javax.swing.JLabel griduser14;
   private static javax.swing.JLabel griduser16;
   private static javax.swing.JLabel griduser17;
   private static javax.swing.JLabel griduser18;
   private static javax.swing.JLabel griduser2;
   private static javax.swing.JLabel griduser20;
   private static javax.swing.JLabel griduser21;
   private static javax.swing.JLabel griduser22;
   private static javax.swing.JLabel griduser23;
   private static javax.swing.JLabel griduser26;
   private static javax.swing.JLabel griduser28;
   private static javax.swing.JLabel griduser30;
   private static javax.swing.JLabel griduser32;
   private static javax.swing.JLabel griduser35;
   private static javax.swing.JLabel griduser36;
   private static javax.swing.JLabel griduser37;
   private static javax.swing.JLabel griduser38;
   private static javax.swing.JLabel griduser39;
   private static javax.swing.JLabel griduser4;
   private static javax.swing.JLabel griduser41;
   private static javax.swing.JLabel griduser42;
   private static javax.swing.JLabel griduser43;
   private static javax.swing.JLabel griduser44;
   private static javax.swing.JLabel griduser45;
   private static javax.swing.JLabel griduser48;
   private static javax.swing.JLabel griduser50;
   private static javax.swing.JLabel griduser52;
   private static javax.swing.JLabel griduser54;
   private static javax.swing.JLabel griduser57;
   private static javax.swing.JLabel griduser58;
   private static javax.swing.JLabel griduser59;
   private static javax.swing.JLabel griduser6;
   private static javax.swing.JLabel griduser60;
   private static javax.swing.JLabel griduser62;
   private static javax.swing.JLabel griduser63;
   private static javax.swing.JLabel griduser64;
   private static javax.swing.JLabel griduser66;
   private static javax.swing.JLabel griduser67;
   private static javax.swing.JLabel griduser68;
   private static javax.swing.JLabel griduser69;
   private static javax.swing.JLabel griduser7;
   private static javax.swing.JLabel griduser70;
   private static javax.swing.JLabel griduser71;
   private static javax.swing.JLabel griduser73;
   private static javax.swing.JLabel griduser74;
   private static javax.swing.JLabel griduser76;
   private static javax.swing.JLabel griduser78;
   private static javax.swing.JLabel griduser79;
   private static javax.swing.JLabel griduser9;
   private javax.swing.JButton hButton;
   private javax.swing.JLabel highscore1;
   private javax.swing.JLabel highscore2;
   private javax.swing.JLabel highscore3;
   private javax.swing.JLabel highscore4;
   private javax.swing.JButton iButton;
   private javax.swing.JButton jButton;
   private javax.swing.JButton jButtonBlue;
   private javax.swing.JButton jButtonGreen;
   private javax.swing.JButton jButtonPurple;
   private javax.swing.JButton jButtonRed;
   private javax.swing.JButton jButtonYellow;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel10;
   private javax.swing.JLabel jLabel11;
   private javax.swing.JLabel jLabel12;
   private javax.swing.JLabel jLabel13;
   private javax.swing.JLabel jLabel14;
   private javax.swing.JLabel jLabel15;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel5;
   private javax.swing.JLabel jLabel9;
   private javax.swing.JLabel jLabelColor;
   private javax.swing.JLabel jLabelHangman;
   private javax.swing.JLabel jLabelLetter1;
   private javax.swing.JLabel jLabelLetter2;
   private javax.swing.JLabel jLabelLetter3;
   private javax.swing.JLabel jLabelLetter4;
   private javax.swing.JLabel jLabelLetter5;
   private javax.swing.JLabel jLabelLetter6;
   private javax.swing.JLabel jLabelLetter7;
   private javax.swing.JLabel jLabelLetter8;
   private javax.swing.JLabel jLabelPACClock;
   private javax.swing.JLabel jLabelScorePAC;
   private javax.swing.JLabel jLabelSpcae;
   private javax.swing.JButton kButton;
   private javax.swing.JButton mButton;
   private javax.swing.JPanel mainPanel;
   private javax.swing.JButton nButton;
   private javax.swing.JButton oButton;
   private javax.swing.JButton pButton;
   private javax.swing.JButton popupCancelButton;
   private javax.swing.JLabel popupDirections;
   private javax.swing.JLabel popupError;
   private javax.swing.JButton popupOkButton;
   private javax.swing.JDialog popupUser;
   private javax.swing.JTextField popupUserInput;
   private javax.swing.JButton qButton;
   private javax.swing.JButton rButton;
   private javax.swing.JButton sButton;
   private javax.swing.JButton skipButton;
   private javax.swing.JLabel sudokuClock;
   private javax.swing.JButton sudokuQuit;
   private javax.swing.JButton sudokuSubmit;
   private javax.swing.JButton tButton;
   private javax.swing.JButton uButton;
   private javax.swing.JTextField userName;
   private javax.swing.JButton userbutton1;
   private javax.swing.JButton userbutton10;
   private javax.swing.JButton userbutton11;
   private javax.swing.JButton userbutton12;
   private javax.swing.JButton userbutton13;
   private javax.swing.JButton userbutton14;
   private javax.swing.JButton userbutton16;
   private javax.swing.JButton userbutton17;
   private javax.swing.JButton userbutton18;
   private javax.swing.JButton userbutton2;
   private javax.swing.JButton userbutton20;
   private javax.swing.JButton userbutton21;
   private javax.swing.JButton userbutton22;
   private javax.swing.JButton userbutton23;
   private javax.swing.JButton userbutton26;
   private javax.swing.JButton userbutton28;
   private javax.swing.JButton userbutton30;
   private javax.swing.JButton userbutton32;
   private javax.swing.JButton userbutton35;
   private javax.swing.JButton userbutton36;
   private javax.swing.JButton userbutton37;
   private javax.swing.JButton userbutton38;
   private javax.swing.JButton userbutton39;
   private javax.swing.JButton userbutton4;
   private javax.swing.JButton userbutton41;
   private javax.swing.JButton userbutton42;
   private javax.swing.JButton userbutton43;
   private javax.swing.JButton userbutton44;
   private javax.swing.JButton userbutton45;
   private javax.swing.JButton userbutton48;
   private javax.swing.JButton userbutton50;
   private javax.swing.JButton userbutton52;
   private javax.swing.JButton userbutton54;
   private javax.swing.JButton userbutton57;
   private javax.swing.JButton userbutton58;
   private javax.swing.JButton userbutton59;
   private javax.swing.JButton userbutton6;
   private javax.swing.JButton userbutton60;
   private javax.swing.JButton userbutton62;
   private javax.swing.JButton userbutton63;
   private javax.swing.JButton userbutton64;
   private javax.swing.JButton userbutton66;
   private javax.swing.JButton userbutton67;
   private javax.swing.JButton userbutton68;
   private javax.swing.JButton userbutton69;
   private javax.swing.JButton userbutton7;
   private javax.swing.JButton userbutton70;
   private javax.swing.JButton userbutton71;
   private javax.swing.JButton userbutton73;
   private javax.swing.JButton userbutton74;
   private javax.swing.JButton userbutton76;
   private javax.swing.JButton userbutton78;
   private javax.swing.JButton userbutton79;
   private javax.swing.JButton userbutton9;
   private javax.swing.JButton vButton;
   private javax.swing.JButton wButton;
   private javax.swing.JButton xButton;
   private javax.swing.JButton yButton;
   private javax.swing.JButton zButton;
   // End of variables declaration//GEN-END:variables
}
