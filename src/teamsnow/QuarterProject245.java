/***************************************************************
* file: QuarterProject245.java
* author: Daniel Fierros
* author: Troy Dome
* 
* class: CS 245 â€“ GUI
*
* assignment: program 1 version 1
* date last modified: 08/10/2016
*
* purpose: This program is a hangman game that begins with a splash screen for 3 seconds
* then enters the menu panel. Once at the menu panel the user has 3 options: (1)Play (2)High Score (3)Credits.
* Once the play button is pressed the Hangman game begins with setting up the start display, then the user presses the 
* desired letter.If the user guesses wrong 6 times, then the program ends, as well as when the user correctly guesses the word.
* The High score button displays all the possible high scores(this does not update for now). The credits button displays the
* authors.
****************************************************************/ 
package teamsnow;

import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import javax.swing.Timer;
import java.awt.Graphics;


/**
 *
 * @author Troy
 */

public class QuarterProject245 extends javax.swing.JFrame {

    /**
     * method:QuarterProject245
     * Purpose:Constructor that Creates new form and sets the arrays with the proper words
     */
    public QuarterProject245()
    {
        initComponents();
        this.words = new String[]{"abstract", "cemetery", "nurse", "pharmacy", "climbing"};
    }
    /**
     * method:initComponents
     * purpose:The methods that are in the generated code is the portion for the design area .
     */
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      mainPanel = new javax.swing.JPanel();
      SplashPage = new javax.swing.JPanel();
      ProjectTitle = new javax.swing.JLabel();
      TeamName = new javax.swing.JLabel();
      MainMenu = new javax.swing.JPanel();
      PlayButton = new javax.swing.JButton();
      HighScoresButton = new javax.swing.JButton();
      CreditsButton = new javax.swing.JButton();
      TeamLogo = new javax.swing.JLabel();
      CreditsMenu = new javax.swing.JPanel();
      backButton0 = new javax.swing.JButton();
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      jLabel3 = new javax.swing.JLabel();
      HighScoresMenu = new javax.swing.JPanel();
      backButton1 = new javax.swing.JButton();
      jLabel4 = new javax.swing.JLabel();
      jLabel5 = new javax.swing.JLabel();
      jLabel6 = new javax.swing.JLabel();
      jLabel7 = new javax.swing.JLabel();
      jLabel8 = new javax.swing.JLabel();
      PlayMenu = new javax.swing.JPanel();
      jLabel9 = new javax.swing.JLabel();
      skipButton = new javax.swing.JButton();
      aButton = new javax.swing.JButton();
      bButton = new javax.swing.JButton();
      cButton = new javax.swing.JButton();
      dButton = new javax.swing.JButton();
      eButton = new javax.swing.JButton();
      fButton = new javax.swing.JButton();
      gButton = new javax.swing.JButton();
      hButton = new javax.swing.JButton();
      iButton = new javax.swing.JButton();
      jButton = new javax.swing.JButton();
      kButton = new javax.swing.JButton();
      LButton = new javax.swing.JButton();
      mButton = new javax.swing.JButton();
      sButton = new javax.swing.JButton();
      tButton = new javax.swing.JButton();
      uButton = new javax.swing.JButton();
      vButton = new javax.swing.JButton();
      oButton = new javax.swing.JButton();
      wButton = new javax.swing.JButton();
      pButton = new javax.swing.JButton();
      xButton = new javax.swing.JButton();
      yButton = new javax.swing.JButton();
      zButton = new javax.swing.JButton();
      qButton = new javax.swing.JButton();
      nButton = new javax.swing.JButton();
      rButton = new javax.swing.JButton();
      jLabel11 = new javax.swing.JLabel();
      jLabelHangman = new javax.swing.JLabel();
      jLabel15 = new javax.swing.JLabel();
      jLabelSpcae = new javax.swing.JLabel();
      jLabelLetter1 = new javax.swing.JLabel();
      jLabelLetter3 = new javax.swing.JLabel();
      jLabelLetter2 = new javax.swing.JLabel();
      jLabelLetter4 = new javax.swing.JLabel();
      jLabelLetter5 = new javax.swing.JLabel();
      jLabelLetter6 = new javax.swing.JLabel();
      jLabelLetter7 = new javax.swing.JLabel();
      jLabelLetter8 = new javax.swing.JLabel();
      End = new javax.swing.JPanel();
      jLabel10 = new javax.swing.JLabel();
      bTMButton = new javax.swing.JButton();
      jLabel13 = new javax.swing.JLabel();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setAutoRequestFocus(false);
      setBackground(new java.awt.Color(255, 255, 255));

      mainPanel.setLayout(new java.awt.CardLayout());

      SplashPage.setMinimumSize(new java.awt.Dimension(600, 400));
      SplashPage.setPreferredSize(new java.awt.Dimension(600, 400));
      ActionListener listen = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //Put card layout here
            CardLayout card = (CardLayout)mainPanel.getLayout();
            card.show(mainPanel, "mainmenuCard");
         }
      };

      Timer t = new Timer(3000, listen);
      t.setRepeats(false);
      t.start();

      ActionListener listen2 = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //Continuously update time here
            SimpleDateFormat bub = new SimpleDateFormat("MMMMMMMMM dd,yyyy  HH:mm:ss");
            Date current = new Date();
            String theDate = bub.format(current);
            jLabel11.setText(theDate);
         }
      };

      Timer tDate = new Timer(500, listen2);
      tDate.start();

      ProjectTitle.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
      ProjectTitle.setText("       CS 245 Project: Summer 2016");

      TeamName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
      TeamName.setText("        By: Team Snow");

      javax.swing.GroupLayout SplashPageLayout = new javax.swing.GroupLayout(SplashPage);
      SplashPage.setLayout(SplashPageLayout);
      SplashPageLayout.setHorizontalGroup(
         SplashPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(SplashPageLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(ProjectTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 669, Short.MAX_VALUE)
            .addContainerGap())
         .addGroup(SplashPageLayout.createSequentialGroup()
            .addGap(229, 229, 229)
            .addComponent(TeamName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(232, 232, 232))
      );
      SplashPageLayout.setVerticalGroup(
         SplashPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(SplashPageLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(ProjectTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
            .addGap(79, 79, 79)
            .addComponent(TeamName, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
            .addGap(110, 110, 110))
      );

      mainPanel.add(SplashPage, "splashCard");
      //CardLayout card = (CardLayout)mainPanel.getLayout();
      //card.show(mainPanel, "mainmenuCard");

      PlayButton.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
      PlayButton.setText("Play");
      PlayButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            PlayButtonActionPerformed(evt);
         }
      });

      HighScoresButton.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
      HighScoresButton.setText("High Scores");
      HighScoresButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            HighScoresButtonActionPerformed(evt);
         }
      });

      CreditsButton.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
      CreditsButton.setText("Credits");
      CreditsButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            CreditsButtonActionPerformed(evt);
         }
      });

      TeamLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/teamlogo.png"))); // NOI18N
      TeamLogo.setText("jLabel1");

      javax.swing.GroupLayout MainMenuLayout = new javax.swing.GroupLayout(MainMenu);
      MainMenu.setLayout(MainMenuLayout);
      MainMenuLayout.setHorizontalGroup(
         MainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(MainMenuLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(MainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainMenuLayout.createSequentialGroup()
                  .addComponent(TeamLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(0, 369, Short.MAX_VALUE))
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainMenuLayout.createSequentialGroup()
                  .addGap(0, 0, Short.MAX_VALUE)
                  .addGroup(MainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(CreditsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(HighScoresButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(PlayButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap())
      );
      MainMenuLayout.setVerticalGroup(
         MainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(MainMenuLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(TeamLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PlayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(HighScoresButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(CreditsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );

      mainPanel.add(MainMenu, "mainmenuCard");

      backButton0.setText("Back");
      backButton0.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            backButton0ActionPerformed(evt);
         }
      });

      jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
      jLabel1.setText("CREDITS");

      jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      jLabel2.setText("Troy Dome, 009572849");

      jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      jLabel3.setText("Daniel Fierros, 009061390");

      javax.swing.GroupLayout CreditsMenuLayout = new javax.swing.GroupLayout(CreditsMenu);
      CreditsMenu.setLayout(CreditsMenuLayout);
      CreditsMenuLayout.setHorizontalGroup(
         CreditsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(CreditsMenuLayout.createSequentialGroup()
            .addGroup(CreditsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(CreditsMenuLayout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(backButton0))
               .addGroup(CreditsMenuLayout.createSequentialGroup()
                  .addGap(213, 213, 213)
                  .addGroup(CreditsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jLabel1)
                     .addComponent(jLabel3)
                     .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(267, Short.MAX_VALUE))
      );
      CreditsMenuLayout.setVerticalGroup(
         CreditsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(CreditsMenuLayout.createSequentialGroup()
            .addGap(92, 92, 92)
            .addComponent(jLabel1)
            .addGap(28, 28, 28)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
            .addComponent(backButton0)
            .addContainerGap())
      );

      mainPanel.add(CreditsMenu, "creditsCard");

      backButton1.setText("Back");
      backButton1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            backButton1ActionPerformed(evt);
         }
      });

      jLabel4.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
      jLabel4.setText("HIGH SCORES");

      jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      jLabel5.setText("ABC ... 00000");

      jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      jLabel6.setText("ABC ... 00000");

      jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      jLabel7.setText("ABC ... 00000");

      jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      jLabel8.setText("ABC ... 00000");

      javax.swing.GroupLayout HighScoresMenuLayout = new javax.swing.GroupLayout(HighScoresMenu);
      HighScoresMenu.setLayout(HighScoresMenuLayout);
      HighScoresMenuLayout.setHorizontalGroup(
         HighScoresMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(HighScoresMenuLayout.createSequentialGroup()
            .addGroup(HighScoresMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(HighScoresMenuLayout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(backButton1))
               .addGroup(HighScoresMenuLayout.createSequentialGroup()
                  .addGap(171, 171, 171)
                  .addGroup(HighScoresMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(jLabel4)
                     .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(259, Short.MAX_VALUE))
      );
      HighScoresMenuLayout.setVerticalGroup(
         HighScoresMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(HighScoresMenuLayout.createSequentialGroup()
            .addGap(88, 88, 88)
            .addComponent(jLabel4)
            .addGap(18, 18, 18)
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel6)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel7)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel8)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
            .addComponent(backButton1)
            .addContainerGap())
      );

      mainPanel.add(HighScoresMenu, "highscoresCard");

      jLabel9.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
      jLabel9.setText("HangMan");

      skipButton.setText("Skip");
      skipButton.setName("skip"); // NOI18N
      skipButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            skipButtonActionPerformed(evt);
         }
      });

      aButton.setText("A");
      aButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            aButtonActionPerformed(evt);
         }
      });

      bButton.setText("B");
      bButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            bButtonActionPerformed(evt);
         }
      });

      cButton.setText("C");
      cButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            cButtonActionPerformed(evt);
         }
      });

      dButton.setText("D");
      dButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            dButtonActionPerformed(evt);
         }
      });

      eButton.setText("E");
      eButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            eButtonActionPerformed(evt);
         }
      });

      fButton.setText("F");
      fButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            fButtonActionPerformed(evt);
         }
      });

      gButton.setText("G");
      gButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            gButtonActionPerformed(evt);
         }
      });

      hButton.setText("H");
      hButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            hButtonActionPerformed(evt);
         }
      });

      iButton.setText("I");
      iButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            iButtonActionPerformed(evt);
         }
      });

      jButton.setText("J");
      jButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonActionPerformed(evt);
         }
      });

      kButton.setText("K");
      kButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            kButtonActionPerformed(evt);
         }
      });

      LButton.setText("L");
      LButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            LButtonActionPerformed(evt);
         }
      });

      mButton.setText("M");
      mButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            mButtonActionPerformed(evt);
         }
      });

      sButton.setText("S");
      sButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            sButtonActionPerformed(evt);
         }
      });

      tButton.setText("T");
      tButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            tButtonActionPerformed(evt);
         }
      });

      uButton.setText("U");
      uButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            uButtonActionPerformed(evt);
         }
      });

      vButton.setText("V");
      vButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            vButtonActionPerformed(evt);
         }
      });

      oButton.setText("O");
      oButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            oButtonActionPerformed(evt);
         }
      });

      wButton.setText("W");
      wButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            wButtonActionPerformed(evt);
         }
      });

      pButton.setText("P");
      pButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            pButtonActionPerformed(evt);
         }
      });

      xButton.setText("X");
      xButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            xButtonActionPerformed(evt);
         }
      });

      yButton.setText("Y");
      yButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            yButtonActionPerformed(evt);
         }
      });

      zButton.setText("Z");
      zButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            zButtonActionPerformed(evt);
         }
      });

      qButton.setText("Q");
      qButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            qButtonActionPerformed(evt);
         }
      });

      nButton.setText("N");
      nButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            nButtonActionPerformed(evt);
         }
      });

      rButton.setText("R");
      rButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            rButtonActionPerformed(evt);
         }
      });

      jLabel11.setText("Date goes here");

      jLabel15.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
      jLabel15.setText("Score");

      jLabelLetter1.setText("   ");

      jLabelLetter3.setText("   ");

      jLabelLetter2.setText("   ");

      jLabelLetter4.setText("   ");

      jLabelLetter5.setText("   ");

      jLabelLetter6.setText("   ");

      jLabelLetter7.setText("   ");

      jLabelLetter8.setText("   ");

      javax.swing.GroupLayout PlayMenuLayout = new javax.swing.GroupLayout(PlayMenu);
      PlayMenu.setLayout(PlayMenuLayout);
      PlayMenuLayout.setHorizontalGroup(
         PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlayMenuLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addGroup(PlayMenuLayout.createSequentialGroup()
                  .addComponent(jLabel9)
                  .addGap(109, 109, 109)
                  .addComponent(jLabel15)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(jLabel11)
                  .addContainerGap())
               .addGroup(PlayMenuLayout.createSequentialGroup()
                  .addGap(0, 60, Short.MAX_VALUE)
                  .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                     .addGroup(PlayMenuLayout.createSequentialGroup()
                        .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addGroup(PlayMenuLayout.createSequentialGroup()
                              .addGap(6, 6, 6)
                              .addComponent(nButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(oButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(pButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(qButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(rButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(sButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(tButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(uButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(vButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(wButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(xButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(yButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(zButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                           .addGroup(PlayMenuLayout.createSequentialGroup()
                              .addComponent(aButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(bButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(cButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(dButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(eButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(fButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(gButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(hButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(iButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(kButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(LButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(mButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17))
                     .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PlayMenuLayout.createSequentialGroup()
                        .addComponent(jLabelLetter1)
                        .addGap(21, 21, 21)
                        .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addGroup(PlayMenuLayout.createSequentialGroup()
                              .addComponent(jLabelHangman, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(skipButton))
                           .addGroup(PlayMenuLayout.createSequentialGroup()
                              .addComponent(jLabelLetter2)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(jLabelLetter3)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(jLabelLetter4)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(jLabelLetter5)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(jLabelLetter6)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(jLabelLetter7)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(jLabelLetter8)
                              .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                     .addGroup(PlayMenuLayout.createSequentialGroup()
                        .addComponent(jLabelSpcae, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))))
      );
      PlayMenuLayout.setVerticalGroup(
         PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlayMenuLayout.createSequentialGroup()
            .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(PlayMenuLayout.createSequentialGroup()
                  .addGap(18, 18, 18)
                  .addComponent(jLabel9)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                  .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(jLabelLetter1)
                     .addComponent(jLabelLetter3)
                     .addComponent(jLabelLetter2)
                     .addComponent(jLabelLetter4)
                     .addComponent(jLabelLetter5)
                     .addComponent(jLabelLetter6)
                     .addComponent(jLabelLetter7)
                     .addComponent(jLabelLetter8)))
               .addGroup(PlayMenuLayout.createSequentialGroup()
                  .addContainerGap()
                  .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(PlayMenuLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelHangman, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addGroup(PlayMenuLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(skipButton)))))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabelSpcae, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(26, 26, 26)
            .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(aButton)
               .addComponent(bButton)
               .addComponent(cButton)
               .addComponent(dButton)
               .addComponent(eButton)
               .addComponent(fButton)
               .addComponent(gButton)
               .addComponent(hButton)
               .addComponent(iButton)
               .addComponent(jButton)
               .addComponent(kButton)
               .addComponent(LButton)
               .addComponent(mButton))
            .addGap(1, 1, 1)
            .addGroup(PlayMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(nButton)
               .addComponent(oButton)
               .addComponent(pButton)
               .addComponent(qButton)
               .addComponent(rButton)
               .addComponent(sButton)
               .addComponent(tButton)
               .addComponent(uButton)
               .addComponent(vButton)
               .addComponent(wButton)
               .addComponent(xButton)
               .addComponent(yButton)
               .addComponent(zButton))
            .addGap(15, 15, 15))
      );

      ActionListener listen3 = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //Continuously update score

            jLabel15.setText("Score:" + score);

            if (randNumber == 2)
            {
               //short spaces
               jLabelSpcae.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/nSpace.png")));
            }
            else
            {
               //long spaces
               jLabelSpcae.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/longSpace.png")));
            }
            if(count ==0)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/startScreen.png")));
            }

            else if(count ==1)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp1.png")));
            }
            else if(count == 2)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp3.png")));
            }
            else if(count == 3)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp4.png")));
            }
            else if(count == 4)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp5.png")));
            }
            else if(count == 5)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp6.png")));
            }
            else if(count == 6)
            {
               jLabelHangman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/hmp7.png")));
            }

            switch(randNumber)
            {
               case 0:
               if (wordCount == 8)
               {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "endCard");

               }
               break;
               case 1:
               if (wordCount == 8)
               {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "endCard");

               }
               break;
               case 2:
               if (wordCount == 5)
               {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "endCard");

               }
               break;
               case 3:
               if (wordCount == 8)
               {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "endCard");

               }
               break;
               case 4:
               if (wordCount == 8)
               {
                  CardLayout card = (CardLayout)mainPanel.getLayout();
                  card.show(mainPanel, "endCard");

               }
               break;
            }

         }
      };
      Timer tScore = new Timer(0, listen3);
      tScore.start();

      mainPanel.add(PlayMenu, "playCard");

      End.setName("end"); // NOI18N

      jLabel10.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
      jLabel10.setText("Your score is ");

      bTMButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
      bTMButton.setText("End Hangman");
      bTMButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            bTMButtonActionPerformed(evt);
         }
      });

      jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
      jLabel13.setText("Score:");

      javax.swing.GroupLayout EndLayout = new javax.swing.GroupLayout(End);
      End.setLayout(EndLayout);
      EndLayout.setHorizontalGroup(
         EndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(EndLayout.createSequentialGroup()
            .addGroup(EndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(EndLayout.createSequentialGroup()
                  .addGap(185, 185, 185)
                  .addComponent(jLabel10))
               .addGroup(EndLayout.createSequentialGroup()
                  .addGap(229, 229, 229)
                  .addComponent(bTMButton))
               .addGroup(EndLayout.createSequentialGroup()
                  .addGap(276, 276, 276)
                  .addComponent(jLabel13)))
            .addContainerGap(241, Short.MAX_VALUE))
      );
      EndLayout.setVerticalGroup(
         EndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(EndLayout.createSequentialGroup()
            .addGap(91, 91, 91)
            .addComponent(jLabel10)
            .addGap(39, 39, 39)
            .addComponent(jLabel13)
            .addGap(69, 69, 69)
            .addComponent(bTMButton)
            .addContainerGap(137, Short.MAX_VALUE))
      );

      ActionListener listen4 = new ActionListener() {
         public void actionPerformed(ActionEvent ev) {
            //Continuously update score

            jLabel13.setText("Score:" + score);

         }
      };
      Timer FScore = new Timer(0, listen4);
      // FScore.setRepeats(false);
      FScore.start();

      mainPanel.add(End, "endCard");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      );

      pack();
      setLocationRelativeTo(null);
   }// </editor-fold>//GEN-END:initComponents

      /**
     * method:PlayButtonActionPerformed
     * purpose:The methods does all the actions for the play button that calls the 
     * begin play method and opens the play card.
     */
   private void PlayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayButtonActionPerformed
      // TODO add your handling code here:
      //Play
      beginPlay();
      CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "playCard");
   }//GEN-LAST:event_PlayButtonActionPerformed

     /**
     * method:HighScoresButtonActionPerformed
     * purpose:The methods does all the actions for the High score button that opens the High score play card.
     */
   private void HighScoresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HighScoresButtonActionPerformed
      // TODO add your handling code here:
      //High scores
      CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "highscoresCard");
   }//GEN-LAST:event_HighScoresButtonActionPerformed
    /**
     * method:CreditsButtonActionPerformed
     * purpose:The methods does all the actions for the credit button that opens the credit play card.
     */
   private void CreditsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreditsButtonActionPerformed
      // TODO add your handling code here:
      // Credits
      // Displays panel over main menu
      CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "creditsCard");
   }//GEN-LAST:event_CreditsButtonActionPerformed

   /**
     * method:backButton0ActionPerformed 
     * purpose:The methods does all the actions for the all the back button that takes the user back
     *  to the main menu play card.
     */
   private void backButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton0ActionPerformed
      // TODO add your handling code here:
      CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "mainmenuCard");
   }//GEN-LAST:event_backButton0ActionPerformed

     /**
     * method:backButton1ActionPerformed 
     * purpose:The methods does all the actions for the all the back button that takes the user back
     *  to the main menu play card.
     */
   private void backButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton1ActionPerformed
      // TODO add your handling code here:
      CardLayout card = (CardLayout)mainPanel.getLayout();
      card.show(mainPanel, "mainmenuCard");
   }//GEN-LAST:event_backButton1ActionPerformed

   
   /**
     * method:bTMButtonActionPerformed 
     * purpose:The methods does all the actions for the all the end hangman button that takes the user back
     *  to the main menu play card and resets everything needed to play the game again.
     */
    private void bTMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTMButtonActionPerformed
        // TODO add your handling code here:
        resetButtons();
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "mainmenuCard");
    }//GEN-LAST:event_bTMButtonActionPerformed
/**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void rButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rButtonActionPerformed
        rStatus = false;
        gameMoves();
        rButton.setEnabled(false);
    }//GEN-LAST:event_rButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void nButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nButtonActionPerformed
        nStatus = false;
        gameMoves();
        nButton.setEnabled(false);
    }//GEN-LAST:event_nButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void qButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qButtonActionPerformed
        qStatus = true;
        gameMoves();
        qButton.setEnabled(false);
    }//GEN-LAST:event_qButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void zButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zButtonActionPerformed
        zStatus = true;
        gameMoves();
        zButton.setEnabled(false);
    }//GEN-LAST:event_zButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void yButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yButtonActionPerformed
        yStatus = false;
        gameMoves();
        yButton.setEnabled(false);
    }//GEN-LAST:event_yButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void xButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xButtonActionPerformed
        xStatus = true;
        gameMoves();
        xButton.setEnabled(false);
    }//GEN-LAST:event_xButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void pButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pButtonActionPerformed
        pStatus = false;
        gameMoves();
        pButton.setEnabled(false);
    }//GEN-LAST:event_pButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void wButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wButtonActionPerformed
        wStatus = true;
        gameMoves();
        wButton.setEnabled(false);
    }//GEN-LAST:event_wButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void oButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oButtonActionPerformed
        oStatus = true;
        gameMoves();
        oButton.setEnabled(false);
    }//GEN-LAST:event_oButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void vButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vButtonActionPerformed
        vStatus = true;
        gameMoves();
        vButton.setEnabled(false);
    }//GEN-LAST:event_vButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void uButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uButtonActionPerformed
        uStatus = false;
        gameMoves();
        uButton.setEnabled(false);
    }//GEN-LAST:event_uButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void tButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tButtonActionPerformed
        tStatus = false;
        gameMoves();
        tButton.setEnabled(false);
    }//GEN-LAST:event_tButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void sButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sButtonActionPerformed
        sStatus = false;
        gameMoves();
        sButton.setEnabled(false);
    }//GEN-LAST:event_sButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void mButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mButtonActionPerformed
        mStatus = false;
        gameMoves();
        mButton.setEnabled(false);
    }//GEN-LAST:event_mButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void LButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LButtonActionPerformed
        lStatus = false;
        gameMoves();
        LButton.setEnabled(false);
    }//GEN-LAST:event_LButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void kButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButtonActionPerformed
        kStatus = true;
        gameMoves();
        kButton.setEnabled(false);
    }//GEN-LAST:event_kButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActionPerformed
        jStatus = true;
        gameMoves();
        jButton.setEnabled(false);
    }//GEN-LAST:event_jButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void iButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iButtonActionPerformed
        iStatus = false;
        gameMoves();
        iButton.setEnabled(false);
    }//GEN-LAST:event_iButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void hButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hButtonActionPerformed
        hStatus = false;
        gameMoves();
        hButton.setEnabled(false);
    }//GEN-LAST:event_hButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void gButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gButtonActionPerformed
        gStatus = false;
        gameMoves();
        gButton.setEnabled(false);
    }//GEN-LAST:event_gButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void fButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fButtonActionPerformed
        fStatus = true;
        gameMoves();
        fButton.setEnabled(false);
    }//GEN-LAST:event_fButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void eButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eButtonActionPerformed
        eStatus = false;
        gameMoves();
        eButton.setEnabled(false);
    }//GEN-LAST:event_eButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void dButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dButtonActionPerformed
        dStatus = true;
        gameMoves();
        dButton.setEnabled(false);
    }//GEN-LAST:event_dButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void cButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButtonActionPerformed
        cStatus = false;
        gameMoves();
        cButton.setEnabled(false);
    }//GEN-LAST:event_cButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void bButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bButtonActionPerformed
        bStatus = false;
        gameMoves();
        bButton.setEnabled(false);
    }//GEN-LAST:event_bButtonActionPerformed

    /**
     * method:(Letter button for the gameButtonActionPerformed 
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. Otherwise if the word is guessed correctly the game also end, Status turns to false and 
     * calls the games moves method. 
     */
    private void aButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aButtonActionPerformed
        aStatus = false;
        gameMoves();
        aButton.setEnabled(false);
    }//GEN-LAST:event_aButtonActionPerformed

    /**
     * method:skipButtonActionPerformed
     * purpose:The method skips the game by going to the end card and sets the score to zero.
     */
    private void skipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipButtonActionPerformed
        score = 0;
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "endCard");
    }//GEN-LAST:event_skipButtonActionPerformed
   
    /**
     * method:resetButtons
     * purpose:The method resets all variables, buttons and images to play the game again.
     */
    public void resetButtons()
   {
       count = 0;
       wordCount = 0;
       score = 100;
       randNumber = 0;
       aButton.setEnabled(true);
       bButton.setEnabled(true);
       cButton.setEnabled(true); 
       dButton.setEnabled(true); 
       eButton.setEnabled(true); 
       fButton.setEnabled(true); 
       gButton.setEnabled(true); 
       hButton.setEnabled(true); 
       iButton.setEnabled(true); 
       jButton.setEnabled(true);
       kButton.setEnabled(true);
       LButton.setEnabled(true);
       mButton.setEnabled(true);
       nButton.setEnabled(true);
       oButton.setEnabled(true);
       pButton.setEnabled(true);
       qButton.setEnabled(true);
       rButton.setEnabled(true);
       sButton.setEnabled(true);
       tButton.setEnabled(true);
       uButton.setEnabled(true);
       vButton.setEnabled(true);
       wButton.setEnabled(true);
       xButton.setEnabled(true);
       yButton.setEnabled(true);
       zButton.setEnabled(true);
        ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter6.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 jLabelLetter7.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                    jLabelLetter8.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
   }
    
     /**
     * method:resetStatus
     * purpose:The method resets the status of the buttons to walk through each letter.
     */
   public void resetStatus()
   {
         //sets values true
   aStatus = true;
   bStatus = true;
   cStatus = true;
   dStatus = true;
   eStatus = true;
   fStatus = true;
   gStatus = true;
   hStatus = true;
   iStatus = true;
   jStatus = true;
   kStatus = true;
   lStatus = true;
   mStatus = true;
   nStatus = true;
   oStatus = true;
   pStatus = true;
  qStatus = true;
   rStatus = true;
   sStatus = true;
   tStatus = true;
   uStatus = true;
   vStatus = true;
   wStatus = true;
   xStatus = true;
   yStatus = true;
  zStatus = true;
   }
   
     /**
     * method:beginPlay
     * purpose:The method sets the random number for the index and the word to a
     * variable.
     */
   public void beginPlay()
   {
       Random rand = new Random();
       randNumber = rand.nextInt(A_SIZE);
       
       playWord = words[randNumber];
          System.out.println(playWord);
      
   }
   
    /**
     * method:gameMoves
     * purpose:The methods does all the actions for the all the letters to play the hangman 
     * game that checks the word to the letter and if the user guess incorrectly more than six times
     * the game ends. It also paints the image of the letter that has action listeners to perform the task 
     * in real time.
     */
   public void gameMoves()
   {
       System.out.println(count);
      switch(randNumber)
             {
             case 0: //abstract
                 if (aStatus == false)
                 {
                     System.out.println("good");
                     wordCount +=2;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/A.png")));
                 jLabelLetter6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/A.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                     
                 }
                 else if (bStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                      ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/B.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (sStatus == false)
                 {
                     System.out.println("good");
                    ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/S.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (tStatus == false)
                 {
                     System.out.println("good");
                     wordCount+=2;
                      ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/T.png")));
                 jLabelLetter8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/T.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (rStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                      ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/R.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (cStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                      ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/C.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else
                 {
                      System.out.println("bad");
                      count++;
                      score = score - 10;
                 }
                 resetStatus();
                   break;
             case 1: //cemetery
                 if (cStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/C.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (eStatus == false)
                 {
                     System.out.println("good");
                     wordCount +=3;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/E.png")));
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/E.png")));
                 jLabelLetter6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/E.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (mStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/M.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (tStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/T.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (rStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/R.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (yStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Y.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else
                 {
                      System.out.println("bad");
                      count++;
                     score = score - 10;
                 }
                 resetStatus();
                   break;
             case 2: //nurse 
                 if (nStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/N.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (uStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/U.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (rStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/R.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (sStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/S.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (eStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/E.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else
                 {
                      System.out.println("bad");
                      count++;
                      score = score - 10;
                 }
                 resetStatus();
                   break;
             
             case 3://pharmacy
                 if (pStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/P.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (hStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/H.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (aStatus == false)
                 {
                     System.out.println("good");
                     wordCount +=2;
                     ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/A.png")));
                  jLabelLetter6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/A.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (rStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                          ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/R.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (mStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                          ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/M.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (cStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                            ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/C.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (yStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                            ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Y.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else
                 {
                      System.out.println("bad");
                      count++;
                      score = score - 10;
                 }
                 resetStatus();
                   break;   
            
             case 4://climbing
                 if (cStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                            ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/C.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (lStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                            ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/L.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (iStatus == false)
                 {
                     System.out.println("good");
                     wordCount+=2;
                            ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/I.png")));
                 jLabelLetter6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/I.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (mStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                             ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/M.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (bStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                             ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/B.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (nStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                             ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/N.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else if (gStatus == false)
                 {
                     System.out.println("good");
                     ++wordCount;
                             ActionListener listen5 = new ActionListener() {
                public void actionPerformed(ActionEvent ev) {
        
                 jLabelLetter8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/G.png")));
                 }
                 };

                Timer endTimer = new Timer(0, listen5);
                endTimer.setRepeats(false);
                endTimer.start();
                 }
                 else
                 {
                      System.out.println("bad");
                      count++;
                      score = score - 10;
                 }
                 resetStatus();
                   break;
             }
       if (count == 6)
       {
        CardLayout card = (CardLayout)mainPanel.getLayout();
        card.show(mainPanel, "endCard");
        System.out.println("The score is :" + score);
       }
   }
   
    /**
     * method:main
     * purpose: sets the thread to play the game and sets the board panels visible.
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuarterProject245.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuarterProject245.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuarterProject245.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuarterProject245.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuarterProject245().setVisible(true);
            }
        });
        
    }
    
    private int count = 0;
    private int wordCount = 0;
    private int score = 100; 
    private int randNumber = 0;
    private final int A_SIZE = 5;
    private String [] words = new String[A_SIZE];
    private String playWord;
    //status for game
   private boolean aStatus = true;
   private boolean bStatus = true;
   private boolean cStatus = true;
   private boolean dStatus = true;
   private boolean eStatus = true;
   private boolean fStatus = true;
   private boolean gStatus = true;
   private boolean hStatus = true;
   private boolean iStatus = true;
   private boolean jStatus = true;
   private boolean kStatus = true;
   private boolean lStatus = true;
   private boolean mStatus = true;
   private boolean nStatus = true;
   private boolean oStatus = true;
   private boolean pStatus = true;
  private boolean qStatus = true;
   private boolean rStatus = true;
   private boolean sStatus = true;
   private boolean tStatus = true;
   private boolean uStatus = true;
   private boolean vStatus = true;
   private boolean wStatus = true;
   private boolean xStatus = true;
   private boolean yStatus = true;
  private boolean zStatus = true;
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton CreditsButton;
   private javax.swing.JPanel CreditsMenu;
   private javax.swing.JPanel End;
   private javax.swing.JButton HighScoresButton;
   private javax.swing.JPanel HighScoresMenu;
   private javax.swing.JButton LButton;
   private javax.swing.JPanel MainMenu;
   private javax.swing.JButton PlayButton;
   private javax.swing.JPanel PlayMenu;
   private javax.swing.JLabel ProjectTitle;
   private javax.swing.JPanel SplashPage;
   private javax.swing.JLabel TeamLogo;
   private javax.swing.JLabel TeamName;
   private javax.swing.JButton aButton;
   private javax.swing.JButton bButton;
   private javax.swing.JButton bTMButton;
   private javax.swing.JButton backButton0;
   private javax.swing.JButton backButton1;
   private javax.swing.JButton cButton;
   private javax.swing.JButton dButton;
   private javax.swing.JButton eButton;
   private javax.swing.JButton fButton;
   private javax.swing.JButton gButton;
   private javax.swing.JButton hButton;
   private javax.swing.JButton iButton;
   private javax.swing.JButton jButton;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel10;
   private javax.swing.JLabel jLabel11;
   private javax.swing.JLabel jLabel13;
   private javax.swing.JLabel jLabel15;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel5;
   private javax.swing.JLabel jLabel6;
   private javax.swing.JLabel jLabel7;
   private javax.swing.JLabel jLabel8;
   private javax.swing.JLabel jLabel9;
   private javax.swing.JLabel jLabelHangman;
   private javax.swing.JLabel jLabelLetter1;
   private javax.swing.JLabel jLabelLetter2;
   private javax.swing.JLabel jLabelLetter3;
   private javax.swing.JLabel jLabelLetter4;
   private javax.swing.JLabel jLabelLetter5;
   private javax.swing.JLabel jLabelLetter6;
   private javax.swing.JLabel jLabelLetter7;
   private javax.swing.JLabel jLabelLetter8;
   private javax.swing.JLabel jLabelSpcae;
   private javax.swing.JButton kButton;
   private javax.swing.JButton mButton;
   private javax.swing.JPanel mainPanel;
   private javax.swing.JButton nButton;
   private javax.swing.JButton oButton;
   private javax.swing.JButton pButton;
   private javax.swing.JButton qButton;
   private javax.swing.JButton rButton;
   private javax.swing.JButton sButton;
   private javax.swing.JButton skipButton;
   private javax.swing.JButton tButton;
   private javax.swing.JButton uButton;
   private javax.swing.JButton vButton;
   private javax.swing.JButton wButton;
   private javax.swing.JButton xButton;
   private javax.swing.JButton yButton;
   private javax.swing.JButton zButton;
   // End of variables declaration//GEN-END:variables
}
